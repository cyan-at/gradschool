E. B. Lee and L. Markus, Foundations of Optimal Control Theory.York, Wiley, 1967.
M. Athans and P. Falb, Optimal Control: An Introduction to the Theory
and Its Applications. New York, McGraw-Hill, 1966.

control grammaian: a square matrix
you can take the eigenvectors of it, sorted by eigenvalue magnitude
the larger the eigenvalue magnitude, the more controllable directions in state-space

biggest eigenvalue eigenvectors, most bang-for-buck u to controllable direction
seems related to minimizing u

the goal is to pull out the states x0 and x1 from c, not to simplify

https://stackoverflow.com/questions/67513799/efficiently-zero-elements-of-numpy-array-using-a-boolean-mask
https://numpy.org/doc/stable/reference/generated/numpy.unique.html
https://www.google.com/search?q=numpy+meshgrid+unique&sxsrf=ALiCzsagUMJsAFWsM7dW8HkyXdRlnwxjpg%3A1657325093441&ei=JcbIYr61GrSJptQPrNassA4&ved=0ahUKEwj-2-KLwer4AhW0hIkEHSwrC-YQ4dUDCA4&uact=5&oq=numpy+meshgrid+unique&gs_lcp=Cgdnd3Mtd2l6EAMyCAgAEB4QDxAWMgUIABCGAzIFCAAQhgM6BwgAEEcQsAM6BAgjECc6BAgAEE
M6BQgAEJECOhEILhCABBCxAxCDARDHARDRAzoLCAAQgAQQsQMQgwE6CAguELEDEIMBOggIABCABBCxAzoKCAAQsQMQgwEQQzoLCAAQsQMQgwEQkQI6EAgAEIAEEIcCELEDEIMBEBQ6CAgAELEDEJECOgoIABCABBCHAhAUOgUIABCABDoGCAAQHhAWSgQIQRgASgQIRhgAUN4HWMEbYJMcaANwAXgAgAGOAYgBjBCSAQUxMC4xMJgBAKABAcgBCMABAQ&sclient=gws-wiz
https://www.google.com/search?q=arctan+vs+arctan2&sxsrf=ALiCzsad93kJ6w5XFyxtPo60xxG2yTygjA:1657325980625&source=lnms&tbm=isch&sa=X&ved=2ahUKEwiCl-iyxOr4AhUoBTQIHX4eCGsQ_AUoAXoECAEQAw&biw=1337&bih=769&dpr=1
https://www.google.com/imgres?imgurl=https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2Fthumb%2Fa%2Fad%2FAtan2definition.svg%2F1200px-Atan2definition.svg.png&imgrefurl=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FAtan2&tbnid=xeznMjlFq0ix0M&vet=12ahUKEwi7gdvBxOr4AhVRGs0KHTClCnwQMygCegUIARDEAQ..i&docid=jkCJ2q9P0pl7TM&w=1200&h=1028&q=arctan%20vs%20arctan2&ved=2ahUKEwi7gdvBxOr4AhVRGs0KHTClCnwQMygCegUIARDEAQ
https://en.wikipedia.org/wiki/Atan2
https://www.google.com/search?q=tan+of+sum&sxsrf=ALiCzsZamNBJvdzxcecMLmDIslLCm8VZLQ:1657326153376&tbm=isch&source=iu&ictx=1&vet=1&fir=IlbDXKKW8F-ywM%252Cr1t2yaerf4UAvM%252C_%253BuBY8SiVJATahIM%252CSb_TidArUMQb2M%252C_%253BM1WpEgpN7-1-5M%252CgOL58tiFiTQpoM%252C_%253BZf4uxxOWZak8BM%252COfnZcIXs1yyzSM%252C_%253BpN4J1p_LbYdeRM%252Cid3NXHI2JXISxM%252C_%253BYEhoghIFr2C0rM%252CGZJrwJC47lYNvM%252C_%253B--KWHNJ8KyeVpM%252CKqCvCr5bI-IZEM%252C_%253B4bqZ4oI75XseGM%252C-WhakXe_xh4TWM%252C_%253BjErIK5_39IIuFM%252CIquR0pfKx-XiVM%252C_%253B3mrPXrFWR_jmmM%252CJ_df47F9xogO4M%252C_%253B56PYcoGrd9PIqM%252CnwgMbwFJ-iVpCM%252C_%253BvymHKhqOz3Ls_M%252C5FFZsWAJhqhaQM%252C_%253BQDdfAd9sd1S2DM%252C6fX_5fSiAQriuM%252C_%253BBBcQqvS06JAJmM%252CL6VEnPMaTyzWDM%252C_&usg=AI4_-kR1pCbUS6gHHTRh4WOM7GXuhrQYYQ&sa=X&ved=2ahUKEwjsmJiFxer4AhXpK0QIHalVCHQQ9QF6BAgFEAE#imgrc=IlbDXKKW8F-ywM
https://stackoverflow.com/questions/59990370/doing-conditional-operations-using-meshgrids-in-numpy-and-merging-them
https://numpy.org/doc/stable/reference/generated/numpy.logical_and.html
https://numpy.org/doc/stable/reference/generated/numpy.select.html
https://numpy.org/doc/stable/reference/generated/numpy.where.html


https://www.overleaf.com/project/62b5c6c39d656f008886d0f0
https://github.com/fwilliams/point-cloud-utils#deduplicating-point-clouds-and-meshes
https://github.com/cvg/pcdmeshing
http://www.open3d.org/docs/release/getting_started.html
https://auth.launchpad.nasa.gov/logout?SAMLRequest=jZJbT4NAEIX%2fCtl3boVS2ACxkTRBq1Zr%2buCLWXYXSgK7yOw29d%2fLRU1MmsbXk3NmzpeZGEjbdHgrK6nVC%2f%2fQHJSRZwl6D8LC94uSmYTxyPSjcmlGQcRMHroud72SBaGLjAPvoZYiQQvLQUYOoHkuQBGhBslZLExnZTrhqxNiP8D%2b0gpW3hsysmFLLYiakkelOsC2TbQ6Wg3Rgh47wixBgFiVPNnN1A0Zt1IAH%2bfqXmBJoAYsSMsBK4r364ctHipgOpuwFtBxWpc1Z8g4t40APJFeT3e9VJLKBqXxhNLP0eshAsD7EQWlI8o3SQnuJRjCSrAH%2f6mmHGzVa1CxPe9K48dhdp4ZG9m35Aqna7mTUjOznKwXaP9dmX4S4d0IRn87xvbcI43n39hzGE%2bcC8bP6f3jcr177vfKOZDzU3fnOjRbF1G%2bKarE8aLduUqS2L4Q%2fBH%2ffFr6BQ%3d%3d&Signature=lfbVo%2fnhMMLnP9n2lFtF0DIwxRzT6nRSLrHGWdvXN53hN%2fm7%2fjP3P%2fBraa6JTEFjMLUU49VyylnfaAw4buaMmftNSS7pFW4ovk3mg2Git00tNmUXS3TfNrVRIj9CCTQcIQF3ZoNV4FSjJrhd14dWl%2bsWjrrZK536nWxPeS70YvCyZR1Jqfo%2be0WBishsQHcWET3blbBerKrTgwSlO15ww4MNkNHi218Vm6DpmkfMVRGryrsp%2bbOI2RVLn6cTrhux%2feHxFND9BFTHx2GesJDzSPT2T2dnq6cOIxGKmPdXm4MdCp2ProwDhAKPAx89lbMiMS0Dwe%2bGn9%2bSP5dD3twCJQ%3d%3d&SigAlg=http%3a%2f%2fwww.w3.org%2f2001%2f04%2fxmldsig-more%23rsa-sha256&client-request-id=c2e92ade-2e83-4fe0-6f1a-008006000015
https://realpython.com/python-virtual-environments-a-primer/
https://docs.rstudio.com/resources/install-python-source/
https://pip.pypa.io/en/stable/installation/
https://stackoverflow.com/questions/1534210/use-different-python-version-with-virtualenv
https://stackoverflow.com/questions/49478573/pip3-install-not-working-no-module-named-pip-vendor-pkg-resources
https://numpy.org/doc/stable/reference/random/generated/numpy.random.multivariate_normal.html
https://teams.microsoft.com/_#/conversations/19:9834c96b9c0246b4a37e3e56475a8a55@thread.v2?ctx=chat
https://trunk.arc.nasa.gov/bitbucket/projects/VIPERGDS/repos/viper_verve/pull-requests/353/diff#bundles/gov.nasa.arc.verve.robot.ros.viper/src/gov/nasa/arc/verve/robot/ros/viper/commandmonitor/commands/MonitoredStereoTrigger.java
https://numpy.org/doc/stable/reference/random/generated/numpy.random.multivariate_normal.html
https://stackoverflow.com/questions/18608349/updated-apply-vectorized-function-on-each-cell-to-interpolate-grid
https://realpython.com/python-lambda/
https://wellsr.com/python/3-ways-to-calculate-python-execution-time/#:~:text=The%20first%20method%20to%20find,returns%20the%20current%20system%20time.
https://www.google.com/search?q=numpmy+vectorize&sxsrf=ALiCzsZEZ1gHVimE6W7FwdfzljglW4IxfA%3A1657296882814&ei=8lfIYrybMYGIptQP5vyciAM&ved=0ahUKEwi83PL_1-n4AhUBhIkEHWY-BzEQ4dUDCA4&uact=5&oq=numpmy+vectorize&gs_lcp=Cgdnd3Mtd2l6EAMyBwgjELACECcyBAgAEA0yBAgAEA0yBAgAEA0yBAgAEA0yBAgAEA0yBAgAEA0yBAgAEA0yBAgAEA0yBAgAEA06BwgAEEcQsAM6BAgjECc6BAgAEEM6BQgAEJECOhEILhCABBCxAxCDARDHARDRAzoLCAAQgAQQsQMQgwE6BwguENQCEEM6CggAELEDEIMBEEM6EAgAEIAEEIcCELEDEIMBEBQ6BwgAELEDEAo6BAgAEAo6BAguEEM6CggAELEDEIMBEAo6CggAELEDEIMBEA06BggAEB4QDUoECEEYAEoECEYYAFDJCliNIGDvIWgEcAF4AIABoAGIAeMPkgEEMi4xNZgBAKABAcgBA8ABAQ&sclient=gws-wiz
https://stackoverflow.com/questions/70327194/run-time-optimization-in-python-for-loop-and-meshgrid-with-numpy
https://numpy.org/doc/stable/reference/generated/numpy.vectorize.html
https://blog.paperspace.com/numpy-optimization-vectorization-and-broadcasting/
https://www.youtube.com/watch?v=KOlQWNGAAbM
https://stackoverflow.com/questions/57640827/best-way-of-combining-meshgrid-with-matrix-multiplication-in-function
https://numpy.org/doc/stable/reference/generated/numpy.einsum.html
https://stackoverflow.com/questions/49776481/use-meshgrid-with-two-different-vectors
https://stackoverflow.com/questions/3337301/numpy-matrix-to-array
https://www.google.com/search?q=np+horzcat&oq=np+horzcat&aqs=chrome..69i57.2843j0j7&sourceid=chrome&ie=UTF-8
https://stackoverflow.com/questions/50440837/color-lookup-with-a-matplotlib-colormap
https://pyqtgraph.readthedocs.io/en/latest/3dgraphics/glscatterplotitem.html
https://pyqtgraph.readthedocs.io/en/latest/3dgraphics/gllineplotitem.html
https://matplotlib.org/stable/tutorials/colors/colormaps.html
https://docs.google.com/spreadsheets/d/1MG4PqBMiFMIlG9CeMuyddmCjwkTpC23EEIAEkpXbL8A/edit#gid=2038720634
https://stackoverflow.com/questions/40423999/pyqtgraph-where-to-find-signal-for-key-preses
https://outlook.office365.com/mail/inbox/id/AAQkADAyZDgxZDI4LTg1ZDctNDEyYi1hMzA3LTZhMDg3Y2IxZjE1ZgAQAPVXYPO79EZHl%2Fs0ch3RSoQ%3D
https://www.google.com/search?q=GLViewWidget+keypress+pyqtgraph&sxsrf=ALiCzsZaoK1e2Jipihm41c_pqqHUvbV2xA%3A1657310744258&ei=GI7IYu2uD_OhkPIPrcuY2A8&ved=0ahUKEwjtmsbRi-r4AhXzEEQIHa0lBvsQ4dUDCA4&uact=5&oq=GLViewWidget+keypress+pyqtgraph&gs_lcp=Cgdnd3Mtd2l6EAMyBQghEKABOgcIABBHELADOgUIIRCrAkoECEEYAEoECEYYAFDPA1iKD2CtEGgBcAF4AIAB0QGIAZMOkgEFMC40LjWYAQCgAQHIAQjAAQE&sclient=gws-wiz
https://www.google.com/search?q=glscatterPlotItem+hide&oq=glscatterPlotItem+hide&aqs=chrome..69i57.2106j0j7&sourceid=chrome&ie=UTF-8
https://calendar.google.com/calendar/u/0/r/week?pli=1
https://calendar.google.com/calendar/u/1/r

https://stackoverflow.com/questions/46257759/spherical-coordinates-plot-in-pyqtgraph
https://github.com/LucasF27/pyQtgraph_test
https://numpy.org/doc/stable/reference/random/generated/numpy.random.normal.html
https://stackoverflow.com/questions/38698277/plot-normal-distribution-in-3d
https://docs.scipy.org/doc/scipy-0.14.0/reference/generated/scipy.stats.multivariate_normal.html
https://en.wikipedia.org/wiki/Multivariate_normal_distribution
https://numpy.org/doc/stable/reference/generated/numpy.meshgrid.html
https://numpy.org/doc/stable/reference/generated/numpy.meshgrid.html
https://stackoverflow.com/questions/45058690/when-using-scipy-stats-multivariate-normal-pdf-having-the-erroroperands-could-n
https://docs.scipy.org/doc//scipy-1.4.1/reference/generated/scipy.stats.multivariate_normal.html
https://stackoverflow.com/questions/29042182/creating-a-4d-matrix-full-of-zeros-in-python-numpy
https://www.google.com/search?q=multivariate_normal+not+yet+returned&oq=multivariate_normal+not+yet+returned&aqs=chrome..69i57.2065j0j7&sourceid=chrome&ie=UTF-8
https://www.tutorialspoint.com/matplotlib/matplotlib_3d_contour_plot.htm
https://numpy.org/doc/stable/reference/generated/numpy.sum.html
https://numpy.org/doc/stable/reference/generated/numpy.sum.html
https://stackoverflow.com/questions/9170838/surface-plots-in-matplotlib
https://stackoverflow.com/questions/51645694/how-to-plot-a-perfectly-smooth-sphere-in-python-using-matplotlib
https://www.esp8266.com/viewtopic.php?p=77659
https://www.askpython.com/python/normal-distribution
https://www.geeksforgeeks.org/visualizing-the-bivariate-gaussian-distribution-in-python/
https://stackoverflow.com/questions/63564845/contour-plots-for-multivariate-gaussian
https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.contourf.html
https://github.com/search?l=Python&q=GLSurfacePlotItem&type=Code
https://stackoverflow.com/questions/61076696/pyqtgraph-opengl-how-to-create-a-sphere-between-two-coordinates
https://www.google.com/search?q=python+normal+distribution&oq=python+normal+distribution&aqs=chrome..69i57j69i60l3.3266j0j7&sourceid=chrome&ie=UTF-8
https://stackoverflow.com/questions/20228546/how-do-i-apply-some-function-to-a-python-meshgrid
https://pyqtgraph.readthedocs.io/en/latest/colormap.html
https://stackoverflow.com/questions/11218477/how-can-i-use-pickle-to-save-a-dict-or-any-other-python-object
https://www.google.com/search?q=pyqtgraph+slider+scatter+plot&oq=pyqtgraph+slider+scatter+plot&aqs=chrome..69i57.4859j0j7&sourceid=chrome&ie=UTF-8
https://github.com/sioan/softXRayDataAndControls/tree/a1ab1ecd86cdc55478bdbb1b4b5fbc861f3eae0b/myAnalysisTools/pyqtgraphExamples
https://github.com/cyan-at/gradschool/blob/main/231/research/distribution0.py
https://stackoverflow.com/questions/15415455/plotting-probability-density-function-by-sample-with-matplotlib
https://stackoverflow.com/questions/38082936/best-way-to-pass-repeated-parameter-to-a-numpy-vectorized-function
https://www.mail-archive.com/pyqtgraph@googlegroups.com/msg00520.html
https://gitlab.tue.mpg.de/elacosse/vviewer/-/blob/d37275d6fac3d1e15f678a74a6d27e2f75f0e71d/vviewer/pyqtgraph/colormap.py
https://pyqtgraph.readthedocs.io/en/pyqtgraph-0.12.1/colormap.html
https://www.programcreek.com/python/example/94476/pyqtgraph.ColorMap
https://doc.qt.io/qtforpython-5/PySide2/QtGui/QColor.html#PySide2.QtGui.PySide2.QtGui.QColor.getRgbF


show that F matrix is non-singular (fresnels) are non-singular
what does c look like in matrix form for A2 != I?

###############################################

loss plotting:
[0] epoch
[0] y1, psi, hjb
[1] y2, rho, plank pde
[2] rho0, initial
[3] rhoT, terminal

###############################################

control policy
v1, v2, v3 => u = B^(-1)v
v = gradient of psi

test:
x1, x2, x3, t, y1 (psi), y2 (rho)

dy1 / x1
dy1 / x2
dy1 / x3

import tensorflow as tf
tf.compat.v1.disable_eager_execution()

test = np.genfromtxt('test.dat')
psi = test[:, 4]
x1 = test[:, 0]
x2 = test[:, 1]
x3 = test[:, 2]
tf.gradients(psi, x1)


v2 = tf.gradients(psi, x2)
v3 = tf.gradients(psi, x3)

###############################################

https://www.tensorflow.org/api_docs/python/tf/gradients
https://stackoverflow.com/questions/41822308/how-tf-gradients-work-in-tensorflow
https://www.tensorflow.org/api_docs/python/tf/gradients
https://stackoverflow.com/questions/65950732/tf-tape-gradient-returns-none-for-my-numerical-function-model
https://www.tensorflow.org/guide/autodiff#getting_a_gradient_of_none
https://www.geeksforgeeks.org/how-to-convert-numpy-array-to-tensor/
https://stackoverflow.com/questions/34097281/convert-a-tensor-to-numpy-array-in-tensorflow
https://stackoverflow.com/questions/52357542/attributeerror-tensor-object-has-no-attribute-numpy
https://www.google.com/search?q=tensorflow+InternalError%3A+Attempting+to+perform+BLAS+operation+using+StreamExecutor+without+BLAS+support+%5BOp%3AMatMul%5D&sxsrf=ALiCzsamTmVRqpWIRDeqRPhZUwPmsJ1YRQ%3A1660858274079&ei=oq_-Yp6sBPuuptQP5Pqx4A4&ved=0ahUKEwiehcubq9H5AhV7l4kEHWR9DOwQ4dUDCA4&uact=5&oq=tensorflow+InternalError%3A+Attempting+to+perform+BLAS+operation+using+StreamExecutor+without+BLAS+support+%5BOp%3AMatMul%5D&gs_lcp=Cgdnd3Mtd2l6EANKBAhBGABKBAhGGABQAFjgDWDZDmgAcAB4AIABAIgBAJIBAJgBAKABAcABAQ&sclient=gws-wiz
https://stackoverflow.com/questions/35226428/how-do-i-get-the-gradient-of-the-loss-at-a-tensorflow-variable
https://numpy.org/doc/stable/reference/generated/numpy.gradient.html
http://localhost:8888/notebooks/optimality_conditions-Copy1.ipynb
http://localhost:8889/notebooks/EulerOMT_plots.ipynb
https://www.tensorflow.org/guide/variable
https://towardsdatascience.com/mastering-tensorflow-variables-in-5-easy-step-5ba8062a1756
https://www.tensorflow.org/api_docs/python/tf/Tensor

https://www.geeksforgeeks.org/how-to-convert-numpy-array-to-tensor/
https://www.tensorflow.org/guide/autodiff#getting_a_gradient_of_none
https://stackoverflow.com/questions/34097281/convert-a-tensor-to-numpy-array-in-tensorflow
https://stackoverflow.com/questions/52357542/attributeerror-tensor-object-has-no-attribute-numpy
https://www.google.com/search?q=tensorflow+InternalError%3A+Attempting+to+perform+BLAS+operation+using+StreamExecutor+without+BLAS+support+%5BOp%3AMatMul%5D&sxsrf=ALiCzsamTmVRqpWIRDeqRPhZUwPmsJ1YRQ%3A1660858274079&ei=oq_-Yp6sBPuuptQP5Pqx4A4&ved=0ahUKEwiehcubq9H5AhV7l4kEHWR9DOwQ4dUDCA4&uact=5&oq=tensorflow+InternalError%3A+Attempting+to+perform+BLAS+operation+using+StreamExecutor+without+BLAS+support+%5BOp%3AMatMul%5D&gs_lcp=Cgdnd3Mtd2l6EANKBAhBGABKBAhGGABQAFjgDWDZDmgAcAB4AIABAIgBAJIBAJgBAKABAcABAQ&sclient=gws-wiz
https://stackoverflow.com/questions/35226428/how-do-i-get-the-gradient-of-the-loss-at-a-tensorflow-variable
https://numpy.org/doc/stable/reference/generated/numpy.gradient.html
https://www.tensorflow.org/guide/variable
https://towardsdatascience.com/mastering-tensorflow-variables-in-5-easy-step-5ba8062a1756
https://www.tensorflow.org/api_docs/python/tf/Tensor

https://numpy.org/doc/stable/reference/generated/numpy.hstack.html
http://localhost:8889/tree
http://localhost:8889/notebooks/EulerOMT_plots.ipynb
http://localhost:8889/notebooks/EulerOMT_plots.ipynb
https://docs.scipy.org/doc/scipy/reference/generated/scipy.interpolate.griddata.html
https://stackoverflow.com/questions/56099302/how-to-zero-out-all-values-of-matrix-2d-array-except-top-n-values-using-numpy
https://www.google.com/search?q=scipy+griddata+3d&sxsrf=ALiCzsYbvhqFKmTZsI4hWGqaifx5E1Um0w%3A1661205372352&ei=fPsDY8qMFaTckPIP186H6AM&ved=0ahUKEwjKuviguNv5AhUkLkQIHVfnAT0Q4dUDCA4&uact=5&oq=scipy+griddata+3d&gs_lcp=Cgdnd3Mtd2l6EAMyBggAEB4QBzIFCAAQhgMyBQgAEIYDMgUIABCGAzoHCCMQsAIQJzoGCAAQHhANOggIABAeEA0QBUoECEEYAEoECEYYAFAAWOoFYK4HaABwAHgAgAGkAYgByAaSAQMwLjaYAQCgAQHAAQE&sclient=gws-wiz
https://stackoverflow.com/questions/47235152/how-to-interpolate-3d-using-pythons-griddata
https://stackoverflow.com/questions/29037424/using-numpy-trapz-to-calculate-a-pdf
https://www.google.com/search?q=numpy+trapz+normalize&oq=numpy+trapz+normalize&aqs=chrome..69i57.2635j0j7&sourceid=chrome&ie=UTF-8
https://stackoverflow.com/questions/11615664/multivariate-normal-density-in-python
https://numpy.org/doc/stable/reference/random/generated/numpy.random.normal.html
https://stackoverflow.com/questions/22071987/generate-random-array-of-floats-between-a-range
https://stackoverflow.com/questions/12402045/mesh-grid-functions-in-python-meshgrid-mgrid-ogrid-ndgrid
https://numpy.org/doc/stable/reference/generated/numpy.ogrid.html
https://anaconda.org/anaconda/pyqtgraph
https://anaconda.org/conda-forge/pyopengl
https://anaconda.org/fastchan/qt

https://stackoverflow.com/questions/2828059/sorting-arrays-in-numpy-by-column
https://stackoverflow.com/questions/60724146/after-upgraded-tensorflow2-1-i-got-runtimeerror-tf-placeholder-is-not-compat
https://stackoverflow.com/questions/72301866/how-to-replace-tf-placeholder-in-eager-execution
https://trunk.arc.nasa.gov/jira/browse/VIPERMOS-879
https://deepxde.readthedocs.io/en/latest/user/installation.html
https://deepxde.readthedocs.io/en/latest/_modules/deepxde/model.html
https://numpy.org/doc/stable/reference/generated/numpy.hstack.html
http://localhost:8889/tree
http://localhost:8889/notebooks/EulerOMT_plots.ipynb
https://docs.scipy.org/doc/scipy/reference/generated/scipy.interpolate.griddata.html
https://stackoverflow.com/questions/56099302/how-to-zero-out-all-values-of-matrix-2d-array-except-top-n-values-using-numpy
https://www.google.com/search?q=scipy+griddata+3d&sxsrf=ALiCzsYbvhqFKmTZsI4hWGqaifx5E1Um0w%3A1661205372352&ei=fPsDY8qMFaTckPIP186H6AM&ved=0ahUKEwjKuviguNv5AhUkLkQIHVfnAT0Q4dUDCA4&uact=5&oq=scipy+griddata+3d&gs_lcp=Cgdnd3Mtd2l6EAMyBggAEB4QBzIFCAAQhgMyBQgAEIYDMgUIABCGAzoHCCMQsAIQJzoGCAAQHhANOggIABAeEA0QBUoECEEYAEoECEYYAFAAWOoFYK4HaABwAHgAgAGkAYgByAaSAQMwLjaYAQCgAQHAAQE&sclient=gws-wiz
https://stackoverflow.com/questions/47235152/how-to-interpolate-3d-using-pythons-griddata
https://stackoverflow.com/questions/29037424/using-numpy-trapz-to-calculate-a-pdf
https://www.google.com/search?q=numpy+trapz+normalize&oq=numpy+trapz+normalize&aqs=chrome..69i57.2635j0j7&sourceid=chrome&ie=UTF-8
https://stackoverflow.com/questions/11615664/multivariate-normal-density-in-python
https://numpy.org/doc/stable/reference/random/generated/numpy.random.normal.html
https://stackoverflow.com/questions/22071987/generate-random-array-of-floats-between-a-range
https://stackoverflow.com/questions/12402045/mesh-grid-functions-in-python-meshgrid-mgrid-ogrid-ndgrid
https://numpy.org/doc/stable/reference/generated/numpy.ogrid.html
https://anaconda.org/anaconda/pyqtgraph
https://anaconda.org/conda-forge/pyopengl
https://anaconda.org/fastchan/qt
https://stackoverflow.com/questions/23359886/selecting-rows-in-numpy-ndarray-based-on-the-value-of-two-columns
https://stackoverflow.com/questions/16343752/numpy-where-function-multiple-conditions
https://stackoverflow.com/questions/26545051/is-there-a-way-to-delete-created-variables-functions-etc-from-the-memory-of-th
https://online-voice-recorder.com/
https://www.google.com/search?q=numpy+gradient+vs+tensorflow+gradient&oq=numpy+gradient+vs+tensorflow+gradient&aqs=chrome..69i57.5348j0j7&sourceid=chrome&ie=UTF-8
https://www.tensorflow.org/guide/autodiff
https://www.toptal.com/python/gradient-descent-in-tensorflow
https://blog.finxter.com/np-gradient/
https://trvrm.github.io/using-tensorflow-to-compute-gradients.html
https://numpy.org/doc/stable/reference/random/generated/numpy.random.shuffle.html
https://numpy.org/doc/stable/reference/generated/numpy.column_stack.html
https://www.google.com/search?q=tensorflow+take+gradient+model&sxsrf=ALiCzsZMgrwVnLqmJyGc_3QvitFPOyG8ig%3A1661283985084&ei=kS4FY7bkBJuoptQPxrO7sAI&ved=0ahUKEwj28LSO3d35AhUblIkEHcbZDiYQ4dUDCA8&uact=5&oq=tensorflow+take+gradient+model&gs_lcp=Cgdnd3Mtd2l6EAM6BwgAEEcQsANKBAhBGABKBAhGGABQzSVY0Chg2yloA3AAeAGAAaUCiAGDBpIBAzItM5gBAKABAcgBCMABAQ&sclient=gws-wiz
https://stackoverflow.com/questions/35226428/how-do-i-get-the-gradient-of-the-loss-at-a-tensorflow-variable
https://stackoverflow.com/questions/59145221/how-to-compute-gradient-of-output-wrt-input-in-tensorflow-2-0
https://www.google.com/search?q=deepxde+save+model&sxsrf=ALiCzsay03iuHedMEG3e_h937a4e2VK-PA%3A1661284123016&ei=Gy8FY8pE0oim1A-a3ongBQ&ved=0ahUKEwiKvpfQ3d35AhVShIkEHRpvAlwQ4dUDCA8&uact=5&oq=deepxde+save+model&gs_lcp=Cgdnd3Mtd2l6EAM6BwgAEEcQsAM6BwgAELADEEM6BggAEB4QBzoICAAQHhAIEAc6CAgAEB4QBxAFOgYIABAeEAg6BQgAEIYDOggIABAeEAgQDUoECEEYAEoECEYYAFCQA1iGFGCNGmgCcAF4AIAB_AGIAeEMkgEDMi03mAEAoAEByAEKwAEB&sclient=gws-wiz
https://deepxde.readthedocs.io/en/latest/modules/deepxde.html#module-deepxde.model
https://www.google.com/search?q=deepxde+%27numpy.ndarray%27+object+has+no+attribute+%27_id%27&oq=deepxde+%27numpy.ndarray%27+object+has+no+attribute+%27_id%27&aqs=chrome..69i57.1878j0j7&sourceid=chrome&ie=UTF-8
https://fixexception.com/tensorflow/numpy-is-only-available-when-eager-execution-is-enabled/
https://www.google.com/search?q=deepxde+gradient&oq=deepxde+gradient&aqs=chrome..69i57.2760j0j7&sourceid=chrome&ie=UTF-8
https://deepxde.readthedocs.io/en/latest/modules/deepxde.html#module-deepxde.model
https://www.google.com/search?q=deepxde.gradients.jacobian&oq=deepxde.gradients.jacobian&aqs=chrome..69i57.192j0j7&sourceid=chrome&ie=UTF-8
https://github.com/lululxvi/deepxde/issues/377
https://github.com/tensorflow/tensorflow/issues/18304


##############################################################

q_statepenalty_gain = 0.5, T_t = 200, 2.0 -> 0.0

nonaxissym_4/
axissymmetric_6/

q_statepenalty_gain = 0.5, T_t = 5.0, 2.0 -> 0.0

run_-2.000_2.000__5.000__2000__0.001__1_1_2__0.500__2.000_1.000__0.000_1.000__12000_1000__50000/
run_-2.000_2.000__5.000__2000__0.001__3_2_1__0.500__2.000_1.000__0.000_1.000__12000_1000__50000/

q_statepenalty_gain = 0.5, T_t = 5.0, 5.0 -> 0.0

run_-2.000_2.000__5.000__2000__0.001__3_2_1__0.500__5.000_1.000__0.000_1.000__12000_1000__50000
run_-2.000_2.000__5.000__2000__0.001__1_1_2__0.500__5.000_1.000__0.000_1.000__12000_1000__50000

##############################################################

non-axissymmetric uncontrolled pdf:

then validate axissymmetric specific case on above code


########################################################################

(1) training error/residual plots (see attached),
(2) optimally controlled univariate state marginals superimposed with
optimally controlled (i.e., closed loop) sample paths as three
subfigures of the same figure
(3) optimal control tau1, tau2, tau3 versus time sample paths as three
subfigures of the same figure

run_-2.000_2.000__5.000__2000__0.001__1_1_2__0.500__2.000_1.000__0.000_1.000__12000_1000__50000/

16k:

time=2k
initial=1k
samples_between_initial_and_final=12k
final=1k

########################################################################


i've been training with tensorflow v1

using tensorflow v2 fails because of libdevice error???
but now it runs
  maybe this is why:  %env XLA_FLAGS=--xla_gpu_cuda_data_dir=/usr/lib/cuda
but is very, very slow? 2 epoch / minute

maybe this is why v1 is faster: 
Enable just-in-time compilation with XLA.


@tf.function(jit_compile=config.xla_jit)
def train_step(inputs, targets, auxiliary_vars):
    # inputs and targets are np.ndarray and automatically converted to Tensor.
    with tf.GradientTape() as tape:
        losses = outputs_losses_train(inputs, targets, auxiliary_vars)[1]
        total_loss = tf.math.reduce_sum(losses)

self.train_state.y_pred_test, self.train_state.loss_test = self._outputs_losses(
    False,
    self.train_state.X_test,
    self.train_state.y_test,
    self.train_state.test_aux_vars,
)

#########################################################

2022-08-24 17:37:21.671109: I tensorflow/compiler/xla/service/service.cc:170] XLA service 0x562d3ec2f240 initialized for platform CUDA (this does not guarantee that XLA will be used). Devices:
2022-08-24 17:37:21.671135: I tensorflow/compiler/xla/service/service.cc:178]   StreamExecutor device (0): NVIDIA RTX A2000 Laptop GPU, Compute Capability 8.6
2022-08-24 17:37:21.702060: I tensorflow/compiler/mlir/tensorflow/utils/dump_mlir_util.cc:263] disabling MLIR crash reproducer, set env var `MLIR_CRASH_REPRODUCER_DIRECTORY` to enable.
2022-08-24 17:37:22.296729: W tensorflow/stream_executor/gpu/asm_compiler.cc:111] *** WARNING *** You are using ptxas 10.1.243, which is older than 11.1. ptxas before 11.1 is known to miscompile XLA code, leading to incorrect results or invalid-address errors.

You may not need to update to CUDA 11.1; cherry-picking the ptxas binary is often sufficient.
2022-08-24 17:37:22.297851: W tensorflow/stream_executor/gpu/asm_compiler.cc:230] Falling back to the CUDA driver for PTX compilation; ptxas does not support CC 8.6
2022-08-24 17:37:22.297860: W tensorflow/stream_executor/gpu/asm_compiler.cc:233] Used ptxas at ptxas
2022-08-24 17:37:22.297914: W tensorflow/stream_executor/gpu/redzone_allocator.cc:314] UNIMPLEMENTED: ptxas ptxas too old. Falling back to the driver to compile.
Relying on driver to perform ptx compilation. 
Modify $PATH to customize ptxas location.
This message will be only logged once.
2022-08-24 17:37:22.302210: W tensorflow/stream_executor/gpu/asm_compiler.cc:111] *** WARNING *** You are using ptxas 10.1.243, which is older than 11.1. ptxas before 11.1 is known to miscompile XLA code, leading to incorrect results or invalid-address errors.

You may not need to update to CUDA 11.1; cherry-picking the ptxas binary is often sufficient.
2022-08-24 17:37:22.303268: W tensorflow/compiler/xla/service/gpu/buffer_comparator.cc:640] UNIMPLEMENTED: ptxas ptxas too old. Falling back to the driver to compile.
Relying on driver to perform ptx compilation. 
Setting XLA_FLAGS=--xla_gpu_cuda_data_dir=/path/to/cuda  or modifying $PATH can be used to set the location of ptxas
This message will only be logged once.
2022-08-24 17:37:24.311800: W tensorflow/stream_executor/gpu/asm_compiler.cc:111] *** WARNING *** You are using ptxas 10.1.243, which is older than 11.1. ptxas before 11.1 is known to miscompile XLA code, leading to incorrect results or invalid-address errors.

You may not need to update to CUDA 11.1; cherry-picking the ptxas binary is often sufficient.
2022-08-24 17:37:24.314325: I tensorflow/compiler/jit/xla_compilation_cache.cc:478] Compiled cluster using XLA!  This line is logged at most once for the lifetime of the process.
Step      Train loss                                  Test loss                                   Test metric
0         [1.33e+01, 1.20e-01, 1.47e-01, 1.00e+00]    [1.33e+01, 1.20e-01, 1.47e-01, 1.00e+00]    []  
2022-08-24 17:37:25.662765: W tensorflow/stream_executor/gpu/asm_compiler.cc:111] *** WARNING *** You are using ptxas 10.1.243, which is older than 11.1. ptxas before 11.1 is known to miscompile XLA code, leading to incorrect results or invalid-address errors.

You may not need to update to CUDA 11.1; cherry-picking the ptxas binary is often sufficient.
2022-08-24 17:37:36.285751: E tensorflow/compiler/xla/service/slow_operation_alarm.cc:61] Constant folding an instrution is taking > 1s:

  %dot.51 = f32[128000,70]{1,0} dot(f32[128000,70]{1,0} %constant.263, f32[70,70]{1,0} %constant.395), lhs_contracting_dims={1}, rhs_contracting_dims={1}

This isn't necessarily a bug; constant-folding is inherently a trade-off between compilation time and speed at runtime.  XLA has some guards that attempt to keep constant folding from taking too long, but fundamentally you'll always be able to come up with an input program that takes a long time.

If you'd like to file a bug, run with envvar XLA_FLAGS=--xla_dump_to=/tmp/foo and attach the results.
2022-08-24 17:37:43.947684: E tensorflow/compiler/xla/service/slow_operation_alarm.cc:61] Constant folding an instrution is taking > 2s:

  %dot.17 = f32[128000,70]{1,0} dot(f32[128000,70]{1,0} %constant.363, f32[70,70]{1,0} %constant.321), lhs_contracting_dims={1}, rhs_contracting_dims={1}

This isn't necessarily a bug; constant-folding is inherently a trade-off between compilation time and speed at runtime.  XLA has some guards that attempt to keep constant folding from taking too long, but fundamentally you'll always be able to come up with an input program that takes a long time.

If you'd like to file a bug, run with envvar XLA_FLAGS=--xla_dump_to=/tmp/foo and attach the results.

#########################################################

https://deepxde.readthedocs.io/en/latest/_modules/deepxde/gradients.html#jacobian
https://github.com/lululxvi/deepxde/blob/master/deepxde/backend/set_default_backend.py
https://www.google.com/search?q=tensorflow+model+gradient&sxsrf=ALiCzsa3aiffvv-oWa4Aqr80xM00LUJvNA%3A1661310552985&ei=WJYFY4LZO4qr0PEPjbSPsAU&ved=0ahUKEwiC5fyKwN75AhWKFTQIHQ3aA1YQ4dUDCA8&uact=5&oq=tensorflow+model+gradient&gs_lcp=Cgdnd3Mtd2l6EAMyCAgAEB4QCBAHMgQIABAeMgYIABAeEAgyBQgAEIYDMgUIABCGAzoHCAAQRxCwAzoGCAAQHhAHOgoIABAeEAgQBxAKOgUIABCABDoICAAQHhAIEAo6BAgAEA1KBAhBGABKBAhGGABQ_hJYvTVg3TZoBnABeACAAXOIAfIJkgEDOS40mAEAoAEByAEIwAEB&sclient=gws-wiz
https://www.tensorflow.org/api_docs/python/tf/test/compute_gradient
https://www.tensorflow.org/guide/autodiff
https://www.google.com/search?q=%22deepxde%22+WARNING%3Atensorflow%3AGradients+do+not+exist+for+variables+%5B%27Variable%3A0%27%5D+when+minimizing+the+loss.&sxsrf=ALiCzsZ_-SNy5zTNdoLSB4FArclt9RkzsQ%3A1661311385340&ei=mZkFY-a6FOuaptQPhcOKmAc&ved=0ahUKEwim6--Xw975AhVrjYkEHYWhAnMQ4dUDCA8&uact=5&oq=%22deepxde%22+WARNING%3Atensorflow%3AGradients+do+not+exist+for+variables+%5B%27Variable%3A0%27%5D+when+minimizing+the+loss.&gs_lcp=Cgdnd3Mtd2l6EAM6BwgAEEcQsANKBAhBGABKBAhGGABQmQtY1RxguR5oAnABeACAAVSIAfIBkgEBM5gBAKABAcgBCMABAQ&sclient=gws-wiz
https://stackoverflow.com/questions/68614547/tensorflow-libdevice-not-found-why-is-it-not-found-in-the-searched-path
https://stackoverflow.com/questions/68614547/tensorflow-libdevice-not-found-why-is-it-not-found-in-the-searched-path
https://stackoverflow.com/questions/62670495/using-xla-in-tensorflow-libdevice-10-bc-internaler
https://towardsdatascience.com/accelerate-your-training-and-inference-running-on-tensorflow-896aa963aa70
https://www.google.com/search?q=deepxde+train+model&oq=deepxde+train+model&aqs=chrome..69i57.3338j0j7&sourceid=chrome&ie=UTF-8
https://deepxde.readthedocs.io/en/latest/_modules/deepxde/model.html#Model.predict
https://deepxde.readthedocs.io/en/latest/_modules/deepxde/callbacks.html#Callback.on_epoch_end
https://deepxde.readthedocs.io/en/latest/_modules/deepxde/model.html#Model.predict
https://deepxde.readthedocs.io/en/latest/_modules/deepxde/callbacks.html#CallbackList.on_epoch_end
https://deepxde.readthedocs.io/en/latest/_modules/deepxde/callbacks.html#EarlyStopping
https://deepxde.readthedocs.io/en/latest/_modules/deepxde/callbacks.html#Callback.on_epoch_end
https://deepxde.readthedocs.io/en/latest/modules/deepxde.data.html?highlight=TimePDE#deepxde.data.pde.TimePDE
https://deepxde.readthedocs.io/en/latest/_modules/deepxde/data/pde.html#TimePDE
https://github.com/lululxvi/deepxde/issues/377
https://deepxde.readthedocs.io/en/latest/_modules/deepxde/model.html
http://fischerp.cs.illinois.edu/tam470/refs/notes_time1c.pdf
https://www.tensorflow.org/api_docs/python/tf/compat/v1/gradients
https://www.tensorflow.org/api_docs/python/tf/compat/v1
https://deepxde.readthedocs.io/en/latest/_modules/deepxde/gradients.html#jacobian
https://github.com/lululxvi/deepxde/blob/master/examples/function/dataset.py
https://www.google.com/search?sxsrf=ALiCzsZIowiN3nCUm_PU4xQRBcmMbn14Zw:1661318728876&q=%22conda%22+tensorflow+INTERNAL:+libdevice+not+found+at+./libdevice.10.bc&sa=X&ved=2ahUKEwim1sXF3t75AhV_jIkEHU-lCFoQ7xYoAHoECAEQNg&biw=1247&bih=939&dpr=1
https://www.google.com/search?q=jupyter+XLA_FLAGS%3D--xla_gpu_cuda_data_dir%3D%2Fpath%2Fto%2Fcuda&sxsrf=ALiCzsZQIaynGWofJcF6yzMx9gzvT2tgLw%3A1661319292367&ei=fLgFY8OMFt6IptQP4pOR-AU&ved=0ahUKEwjDup7S4N75AhVehIkEHeJJBF8Q4dUDCA4&uact=5&oq=jupyter+XLA_FLAGS%3D--xla_gpu_cuda_data_dir%3D%2Fpath%2Fto%2Fcuda&gs_lcp=Cgdnd3Mtd2l6EAMyBQgAEKIEMgUIABCiBDIFCAAQogRKBAhBGABKBAhGGABQAFicEGD5EWgAcAB4AIABfYgBgQeSAQMxLjeYAQCgAQHAAQE&sclient=gws-wiz
https://github.com/google/jax/issues/989
https://stackoverflow.com/questions/72107119/how-to-use-system-gpu-in-jupyter-notebook
https://www.pythonfixing.com/2022/05/fixed-tensorflow-libdevice-not-found.html
https://stackoverflow.com/questions/37890898/how-to-set-env-variable-in-jupyter-notebook
https://www.tensorflow.org/guide/advanced_autodiff
https://stackoverflow.com/questions/59590766/how-do-i-get-the-gradient-of-a-keras-model-with-respect-to-its-inputs
https://stackoverflow.com/questions/55066710/computing-gradients-wrt-model-inputs-in-tensorflow-eager-mode
https://stackoverflow.com/questions/57529831/solved-how-to-combine-tf-gradients-with-tf-data-dataset-and-keras-models
https://stackoverflow.com/questions/62325764/calculating-the-derivates-of-the-output-with-respect-to-input-for-a-give-time-st
https://www.tensorflow.org/api_docs/python/tf/GradientTape
https://www.tutorialexample.com/fix-tf-gradienttape-attributeerror-refvariable-object-has-no-attribute-_id-error-tensorflow-tutorial/
https://stackoverflow.com/questions/51440135/tensorflow-stop-training-when-losses-reach-a-defined-value
https://www.tensorflow.org/api_docs/python/tf/compat/v1/gradients
https://stackoverflow.com/questions/58888215/sess-run-and-eval-in-tensorflow-programming
https://www.tensorflow.org/api_docs/python/tf/compat/v1/Session
https://deepxde.readthedocs.io/en/latest/_modules/deepxde/gradients.html

https://www.google.com/search?q=tf+v1+session+gradient&oq=tf+v1+session+gradient&aqs=chrome..69i57.4203j0j7&sourceid=chrome&ie=UTF-8
https://www.google.com/search?q=tensorflow+train+with+gradienttape&oq=tensorflow+train+with+gradienttape&aqs=chrome..69i57.11482j0j4&sourceid=chrome&ie=UTF-8
https://pyimagesearch.com/2020/03/23/using-tensorflow-and-gradienttape-to-train-a-keras-model/
https://www.tensorflow.org/guide/keras/writing_a_training_loop_from_scratch
https://deepxde.readthedocs.io/en/latest/search.html?q=speed&check_keywords=yes&area=default#
https://deepxde.readthedocs.io/en/latest/user/installation.html?highlight=speed#which-backend-should-i-choose
https://deepxde.readthedocs.io/en/latest/modules/deepxde.html?highlight=compile#deepxde.model.Model.compile
https://www.google.com/search?q=or+modifying+%24PATH+can+be+used+to+set+the+location+of+ptxas&sxsrf=ALiCzsarY71FmutQi-_Qvl4TsJp1IQ_6IA%3A1661379568515&ei=8KMGY4yPH-bZkPIPqauo0Ao&ved=0ahUKEwiMx5KYweD5AhXmLEQIHakVCqoQ4dUDCA4&uact=5&oq=or+modifying+%24PATH+can+be+used+to+set+the+location+of+ptxas&gs_lcp=Cgdnd3Mtd2l6EAMyBQgAEKIEOgcIABBHELADSgQIQRgASgQIRhgAUNEDWNEDYL0KaANwAXgAgAGqAYgBqgGSAQMwLjGYAQCgAQKgAQHIAQjAAQE&sclient=gws-wiz
https://stackoverflow.com/questions/46064433/cuda-home-path-for-tensorflow
https://groups.google.com/a/tensorflow.org/g/testing/c/4aPvoX21D9g
https://stackoverflow.com/questions/53429896/how-do-i-disable-tensorflows-eager-execution

https://towardsdatascience.com/pytorch-autograd-understanding-the-heart-of-pytorchs-magic-2686cd94ec95
https://majianglin2003.medium.com/pytorch-gradients-8ed224a6b54d
https://discuss.pytorch.org/t/gradient-between-two-different-tensor/68410/16

https://en.wikipedia.org/wiki/Power_iteration
https://www.google.com/search?q=power+iteration+geometry&tbm=isch&ved=2ahUKEwjXuYfR5MH5AhWKADQIHdlbAqIQ2-cCegQIABAA#imgrc=IcPPr_-27Gj8sM
https://en.wikipedia.org/wiki/Quadratic_form
https://www.overleaf.com/project/62b5c6c39d656f008886d0f0
https://www.google.com/search?q=proximal+recursion+github&sxsrf=ALiCzsY8MkWmpDXb7hk2wcXXlrv86WYdZA%3A1660337310782&ei=nrz2Yu-oL_GaptQPzcC5sA4&ved=0ahUKEwjv7_a8lsL5AhVxjYkEHU1gDuYQ4dUDCA4&uact=5&oq=proximal+recursion+github&gs_lcp=Cgdnd3Mtd2l6EANKBAhBGAFKBAhGGABQnwVY0gpgogtoAXAAeAGAAfUBiAGPBZIBBTUuMC4xmAEAoAEBwAEB&sclient=gws-wiz

#########################################################

# # gradients = tape.gradient(tf.convert_to_tensor(preds), inp_tensor)

# # print(gradients)

# print("")
# print("test output")
# print(test_timesorted[:, 4:6])

# print("")
# print("model.train_state.X_test")
# x_test_sorted = model.train_state.X_test[model.train_state.X_test[:, 3].argsort()]
# print(x_test_sorted, x_test_sorted.shape)

# tf.gradients(preds, inp)

# inp_tf = tf.Variable(inp, dtype=tf.float32)
# preds_tf1 = model.predict(inp_tf)
# print(preds_tf1)

# with tf.GradientTape() as tape:
#     preds_tf2 = model.predict(inp_tf)
    
# print(preds_tf2)

# grads = tape.gradient(preds_tf2, inp_tf)
# print(grads)

# psi_tf = tf.Variable(test_timesorted[:, 0:2], dtype=tf.float32)
# x1_x2_x3_tf = tf.Variable(test_timesorted[:, 0:3], dtype=tf.float32)

# gradient = dde.gradients.jacobian(preds_tf, inp_tf)
# print(gradient)

https://stackoverflow.com/questions/59922755/how-to-compute-the-gradient-of-only-one-output-unit

#########################################################

2022-08-29 12:26:54.086402: W tensorflow/compiler/xla/service/gpu/buffer_comparator.cc:640] UNIMPLEMENTED: ptxas ptxas too old. Falling back to the driver to compile.
Relying on driver to perform ptx compilation. 
Setting XLA_FLAGS=--xla_gpu_cuda_data_dir=/path/to/cuda  or modifying $PATH can be used to set the location of ptxas



https://numpy.org/doc/stable/reference/generated/numpy.ediff1d.html
https://www.fast.ai/2022/08/25/jupyter-git/
https://www.mathworks.com/help/matlab/ref/gradient.html#bvhp8_m
https://www.google.com/search?q=speeding+up+tensorflow+v2+training+%22xla%22&sxsrf=ALiCzsZPE7uBuYPGdKjc6NBpoWriCdAj4A%3A1661654949458&ei=pdcKY7vSG8KL0PEPm5WsqA8&ved=0ahUKEwj7uIGIw-j5AhXCBTQIHZsKC_UQ4dUDCA4&uact=5&oq=speeding+up+tensorflow+v2+training+%22xla%22&gs_lcp=Cgdnd3Mtd2l6EAMyBQghEKABMgUIIRCgATIFCCEQoAEyBQghEKABMgUIIRCrAjIFCCEQqwI6BwgAEEcQsAM6CAghEB4QFhAdSgQIQRgASgQIRhgAUJ0JWJkQYL8RaAJwAXgAgAGQAYgB5ASSAQMwLjWYAQCgAQHIAQjAAQE&sclient=gws-wiz
https://www.sicara.fr/blog-technique/tensorflow-tutorial-training-time#:~:text=To%20optimize%20training%20speed%2C%20you,are%20smarter%20tools%20out%20there.
https://www.kdnuggets.com/2020/03/tensorflow-optimizing-training-time-performance.html
https://numpy.org/doc/stable/reference/generated/numpy.gradient.html
https://github.com/ami-iit/lie-group-controllers
https://medium.com/sicara/tensorflow-2-0-tutorial-optimizing-training-time-performance-ba9418a8c288
https://blog.seeso.io/a-simple-guide-to-speed-up-your-training-in-tensorflow-2-8386e6411be4
https://deepxde.readthedocs.io/en/latest/search.html?q=config&check_keywords=yes&area=default#
https://deepxde.readthedocs.io/en/latest/user/installation.html?highlight=configure
https://deepxde.readthedocs.io/en/latest/modules/deepxde.html?highlight=config#module-deepxde.config
https://deepxde.readthedocs.io/en/latest/modules/deepxde.html?highlight=config#deepxde.config.default_float
https://www.google.com/maps/place/%E5%A4%A7%E6%9D%89%E8%B0%B7/@34.2110449,136.1507057,15z/data=!3m1!4b1!4m5!3m4!1s0x600683406724a5fb:0x7202ad7a09b76b5f!8m2!3d34.2110455!4d136.1507057?hl=en
https://github.com/ainfosec/FISSURE
https://pianochord.io/chord/A-flat/Ab-lydian
https://www.scientific-ml.com/software
https://github.com/pettni/smooth
https://pettni.github.io/smooth/
https://www.cs.cmu.edu/~kmcrane/Projects/LieGroupIntegrators/paper.pdf
https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.459.5190&rep=rep1&type=pdf
https://drum.lib.umd.edu/bitstream/handle/1903/5567/PhD_94-9.pdf?sequence=1&isAllowed=y
https://stackoverflow.com/questions/59922755/how-to-compute-the-gradient-of-only-one-output-unit
https://www.google.com/search?q=tensorflow+gradient+vs+numerical+gradient&biw=1290&bih=741&sxsrf=ALiCzsbOaIyW9vM2m8fKD3FUUlizBbpWHA%3A1661649533475&ei=fcIKY-_HHLmGptQPwOWB4Ag&ved=0ahUKEwiv-rvxruj5AhU5g4kEHcByAIwQ4dUDCA4&uact=5&oq=tensorflow+gradient+vs+numerical+gradient&gs_lcp=Cgdnd3Mtd2l6EAMyBQgAEKIEMgUIABCiBDoHCAAQRxCwA0oECEEYAEoECEYYAFCVCVieEWD4EmgCcAF4AIABdIgB_waSAQM1LjSYAQCgAQHIAQjAAQE&sclient=gws-wiz
https://towardsdatascience.com/implement-gradient-descent-in-python-9b93ed7108d1
https://arxiv.org/pdf/2007.11898.pdf
https://github.com/UZ-SLAMLab/ORB_SLAM3
https://arxiv.org/pdf/1502.00956.pdf
https://www.researchgate.net/figure/Semantic-understanding-allows-humans-to-predict-changes-in-the-environment-at-different_fig4_304163768
https://www.researchgate.net/figure/The-front-end-and-back-end-of-the-SLAM-process_fig4_263057565
https://vnav.mit.edu/material/23-SLAM1-formulationsAndSparsity-notes.pdf
https://stackoverflow.com/questions/39870642/matplotlib-how-to-plot-a-high-resolution-graph
https://numpy.org/doc/stable/reference/generated/numpy.savetxt.html
https://numpy.org/doc/stable/reference/generated/numpy.genfromtxt.html
https://towardsdatascience.com/jypyter-notebook-shortcuts-bf0101a98330
https://deepxde.readthedocs.io/en/latest/modules/deepxde.html
https://deepxde.readthedocs.io/en/latest/demos/pinn_forward/eulerbeam.html?highlight=.jacobian#implementation
https://stackoverflow.com/questions/56072634/tf-2-0-runtimeerror-gradienttape-gradient-can-only-be-called-once-on-non-pers
https://stackoverflow.com/questions/62453756/how-to-move-jupyter-notebook-cells-up-down-using-keyboard-shortcut#:~:text=Now%2C%20when%20you%20are%20in,Edit%20%2D%3E%20Move%20Cells%20Down%20.&text=That%20works!
https://www.mathworks.com/help/symbolic/sym.gradient.html
https://www.mathworks.com/matlabcentral/answers/462287-how-to-import-a-3d-python-numpy-array-into-matlab
https://stackoverflow.com/questions/10997254/converting-numpy-arrays-to-matlab-and-vice-versa
http://www.cds.caltech.edu/~murray/courses/cds101/fa08/pdf/L2-2_lyapunov.pdf
https://www.egr.msu.edu/~khalil/NonlinearSystems/Sample/Lect_8.pdf
https://www.researchgate.net/publication/324578263_Asymptotic_Controllability_and_Lyapunov-like_Functions_Determined_by_Lie_Brackets
http://localwww.math.unipd.it/~marson/TS16/Slides/Rampazzo.pdf
https://web.stanford.edu/class/ee363/lectures/lyap.pdf
https://arxiv.org/abs/1608.02712
https://www.quora.com/How-does-TensorFlow-calculate-gradients
https://docs.scipy.org/doc/scipy/reference/generated/scipy.io.loadmat.html
https://github.com/lululxvi/deepxde/blob/master/examples/pinn_forward/diffusion_reaction.py
https://github.com/lululxvi/deepxde/blob/770e7c1f703682633fe182a6de984987fd579afa/deepxde/gradients.py
https://deepxde.readthedocs.io/en/latest/demos/pinn_forward.html#time-dependent-pdes
https://numpy.org/doc/stable/reference/generated/numpy.savetxt.html
https://stackoverflow.com/questions/22071987/generate-random-array-of-floats-between-a-range
file:///home/cyan3/Desktop/Schrodinger__factor_for_EulerOMT.pdf
https://matlab.mathworks.com/
https://codeutility.org/python-3-x-how-to-compute-gradient-of-output-wrt-input-in-tensorflow-2-0-stack-overflow/
http://localhost:8888/notebooks/pinn_tensorflowv2.ipynb#
https://www.youtube.com/watch?v=y8HbErj_6j8
https://stackoverflow.com/questions/59922755/how-to-compute-the-gradient-of-only-one-output-unit
https://www.google.com/search?q=tensorflow+gradient+vs+numerical+gradient&biw=1290&bih=741&sxsrf=ALiCzsbOaIyW9vM2m8fKD3FUUlizBbpWHA%3A1661649533475&ei=fcIKY-_HHLmGptQPwOWB4Ag&ved=0ahUKEwiv-rvxruj5AhU5g4kEHcByAIwQ4dUDCA4&uact=5&oq=tensorflow+gradient+vs+numerical+gradient&gs_lcp=Cgdnd3Mtd2l6EAMyBQgAEKIEMgUIABCiBDoHCAAQRxCwA0oECEEYAEoECEYYAFCVCVieEWD4EmgCcAF4AIABdIgB_waSAQM1LjSYAQCgAQHIAQjAAQE&sclient=gws-wiz
https://towardsdatascience.com/implement-gradient-descent-in-python-9b93ed7108d1
https://arxiv.org/pdf/2007.11898.pdf
https://github.com/UZ-SLAMLab/ORB_SLAM3
https://arxiv.org/pdf/1502.00956.pdf
https://www.researchgate.net/figure/Semantic-understanding-allows-humans-to-predict-changes-in-the-environment-at-different_fig4_304163768
https://www.researchgate.net/figure/The-front-end-and-back-end-of-the-SLAM-process_fig4_263057565
https://vnav.mit.edu/material/23-SLAM1-formulationsAndSparsity-notes.pdf
https://stackoverflow.com/questions/39870642/matplotlib-how-to-plot-a-high-resolution-graph
https://numpy.org/doc/stable/reference/generated/numpy.savetxt.html
https://numpy.org/doc/stable/reference/generated/numpy.genfromtxt.html
https://towardsdatascience.com/jypyter-notebook-shortcuts-bf0101a98330
https://deepxde.readthedocs.io/en/latest/modules/deepxde.html
https://deepxde.readthedocs.io/en/latest/demos/pinn_forward/eulerbeam.html?highlight=.jacobian#implementation
https://stackoverflow.com/questions/56072634/tf-2-0-runtimeerror-gradienttape-gradient-can-only-be-called-once-on-non-pers
https://stackoverflow.com/questions/62453756/how-to-move-jupyter-notebook-cells-up-down-using-keyboard-shortcut#:~:text=Now%2C%20when%20you%20are%20in,Edit%20%2D%3E%20Move%20Cells%20Down%20.&text=That%20works!
https://www.mathworks.com/help/symbolic/sym.gradient.html
https://www.mathworks.com/matlabcentral/answers/462287-how-to-import-a-3d-python-numpy-array-into-matlab
https://stackoverflow.com/questions/10997254/converting-numpy-arrays-to-matlab-and-vice-versa
http://www.cds.caltech.edu/~murray/courses/cds101/fa08/pdf/L2-2_lyapunov.pdf
https://www.egr.msu.edu/~khalil/NonlinearSystems/Sample/Lect_8.pdf
https://www.researchgate.net/publication/324578263_Asymptotic_Controllability_and_Lyapunov-like_Functions_Determined_by_Lie_Brackets
http://localwww.math.unipd.it/~marson/TS16/Slides/Rampazzo.pdf
https://web.stanford.edu/class/ee363/lectures/lyap.pdf
https://arxiv.org/abs/1608.02712
https://www.quora.com/How-does-TensorFlow-calculate-gradients
https://docs.scipy.org/doc/scipy/reference/generated/scipy.io.loadmat.html
https://github.com/lululxvi/deepxde/blob/master/examples/pinn_forward/diffusion_reaction.py
https://github.com/lululxvi/deepxde/blob/770e7c1f703682633fe182a6de984987fd579afa/deepxde/gradients.py
https://deepxde.readthedocs.io/en/latest/demos/pinn_forward.html#time-dependent-pdes
https://numpy.org/doc/stable/reference/generated/numpy.savetxt.html
https://stackoverflow.com/questions/22071987/generate-random-array-of-floats-between-a-range
file:///home/cyan3/Desktop/Schrodinger__factor_for_EulerOMT.pdf
https://codeutility.org/python-3-x-how-to-compute-gradient-of-output-wrt-input-in-tensorflow-2-0-stack-overflow/
https://www.youtube.com/watch?v=y8HbErj_6j8

#########################################################

restored_psi
tf.Tensor([-0.066 -0.066 -0.065 ...  0.04   0.04   0.04 ], shape=(16000,), dtype=float32)

test output
[-0.066 -0.066 -0.066 ...  0.04   0.04   0.04 ]

restored_vopt_xt
[[ 0.036  0.018 -0.     0.028]
 [ 0.036  0.018 -0.     0.028]
 [ 0.047  0.016  0.003  0.002]
 ...
 [ 0.018  0.031  0.024 -0.025]
 [ 0.018  0.031  0.024 -0.025]
 [ 0.018  0.031  0.024 -0.025]]


 restored_psi
tf.Tensor([-0.066 -0.066 -0.065 ...  0.04   0.04   0.04 ], shape=(16000,), dtype=float32)

test output
[-0.066 -0.066 -0.066 ...  0.04   0.04   0.04 ]

restored_vopt_xt
[[ 0.036  0.018 -0.     0.028]
 [ 0.036  0.018 -0.     0.028]
 [ 0.047  0.016  0.003  0.002]
 ...
 [ 0.018  0.031  0.024 -0.025]
 [ 0.018  0.031  0.024 -0.025]
 [ 0.018  0.031  0.024 -0.025]]

#########################################################

print(np.max(t0_V1))
print(np.max(t0_V2))
print(np.max(t0_V3))

print(np.max(mid_V1))
print(np.max(mid_V2))
print(np.max(mid_V3))

print(np.max(t5_V1))
print(np.max(t5_V2))
print(np.max(t5_V3))

# the histogram of the data
b = 4
n, bins, patches = plt.hist(t0_V1.reshape(-1), bins=b, density=True, facecolor='r', alpha=0.5)
n, bins, patches = plt.hist(t0_V2.reshape(-1), bins=b, density=True, facecolor='r', alpha=0.5)
n, bins, patches = plt.hist(t0_V3.reshape(-1), bins=b, density=True, facecolor='r', alpha=0.5)

n, bins, patches = plt.hist(mid_V1.reshape(-1), bins=b, density=True, facecolor='g', alpha=0.5)
n, bins, patches = plt.hist(mid_V2.reshape(-1), bins=b, density=True, facecolor='g', alpha=0.5)
n, bins, patches = plt.hist(mid_V3.reshape(-1), bins=b, density=True, facecolor='g', alpha=0.5)

n, bins, patches = plt.hist(t5_V1.reshape(-1), bins=b, density=True, facecolor='c', alpha=0.5)
n, bins, patches = plt.hist(t5_V2.reshape(-1), bins=b, density=True, facecolor='c', alpha=0.5)
n, bins, patches = plt.hist(t5_V3.reshape(-1), bins=b, density=True, facecolor='c', alpha=0.5)

plt.xlabel('v')
plt.ylabel('counts')
plt.title('vs: %.2f, %.2f, %.2f --- %.2f, %.2f, %.2f --- %.2f, %2.f, %.2f' % (
    np.max(t0_V1),
    np.max(t0_V2),
    np.max(t0_V3),

    np.max(mid_V1),
    np.max(mid_V2),
    np.max(mid_V3),

    np.max(t5_V1),
    np.max(t5_V2),
    np.max(t5_V3)))
plt.grid(True)
plt.show()

j = dde.gradients.Jacobian(restored_preds, inp_tensor)
dir(j)

dde.grad.jacobian(restored_preds,inp_tensor)

# library does not work for tf.v2

j = dde.gradients.Jacobian(output_tensor, input_tensor)
j()
print(j.J)




model._outputs_losses(
    False,
    model.train_state.X_test,
    model.train_state.y_test,
    model.train_state.test_aux_vars,
)

model.test_state

print(model.outputs_losses_train)
# with tf.GradientTape() as tape:
#     outputs_ = model.net(input_tensor, training=False)


x1 = torch.tensor(test_timesorted[:, 0], requires_grad = True)
one=torch.ones((2000,1))
psi = torch.tensor(torch.FloatTensor(one)*test_timesorted[:, 4])
psi.backward()

print(model.outputs)
print(dir(model))
print(model.print_model())

a = tf.constant(0.)
b = 2 * a
g = tf.gradients(a + b, [a, b], stop_gradients=[a, b])
print(g)

x1 = test_timesorted[:, 0]
psi = test_timesorted[:, 4]

x1_tensor = tf.convert_to_tensor(x1)
print(x1_tensor)

inp = test_timesorted[:, 0:4]
input_tensor = tf.convert_to_tensor(inp)

output = model.predict(inp)
output_tensor = tf.convert_to_tensor(output)

tf.gradients(output_tensor, input_tensor)




        #############################################################################

        controlled_all_time_data = None
        if t_e > 0:
            '''
            adding control
            '''
            controlled_all_time_data = np.empty(
                (
                    initial_sample.shape[0],
                    initial_sample.shape[1],
                    len(t_samples))
                )

            controlled_dynamics_with_args = lambda state, t: controlled_dynamics(state, t, -alpha2, alpha2)
            for sample_i in range(initial_sample.shape[0]):
                sample_states = integrate.odeint(
                    controlled_dynamics_with_args,
                    initial_sample[sample_i, :],
                    t_samples)
                controlled_all_time_data[sample_i, :, :] = sample_states.T

#########################################################

print(model.outputs_losses_train)
# with tf.GradientTape() as tape:
#     outputs_ = model.net(input_tensor, training=False)

#########################################################

def WASS(y_true, y_pred):

    nSample=100

    x_grid = np.transpose(np.linspace(0., 6., nSample))

    y_grid = np.transpose(np.linspace(0., 6., nSample))



#    xpdf=y_true.np()

#    ypdf= y_pred.np()

#    sess = tf.compat.v1.InteractiveSession()

    xpdf= tf.make_ndarray(y_pred)

    ypdf= tf.make_ndarray(y_true)

    [X,Y] = np.meshgrid(x_grid,x_grid)

    C = (X - Y)**2

    cvector = C.flatten('F')





    A = np.concatenate((np.kron(np.ones((1,nSample)), sparse.eye(nSample).toarray()), np.kron(sparse.eye(nSample).toarray(),np.ones((1,nSample)))), axis=0)

    bvector = np.concatenate((xpdf,ypdf), axis=0)

    res=linprog(cvector, A_eq=A, b_eq=bvector, options={"disp": True})

    return res.fun

#########################################################

from scipy.interpolate import griddata as gd

target_t = 0.0

N = 50

test_timesorted = test[test[:, 3].argsort()]
timesorted = test_timesorted[:, 3]
test_ti = test_timesorted[np.where(np.abs(timesorted - target_t) < 1e-8), :][0] # 2k

ti_rho_opt = test_ti[:, 5]
ti_x1_x2_x3 = test_ti[:, 0:3]

####################################################################

x1 = np.linspace(state_min, state_max, N)
x2 = np.linspace(state_min, state_max, N)
x3 = np.linspace(state_min, state_max, N)

rho_opt = np.zeros((N,N,N))

closest_1 = [(np.abs(x1 - ti_x1_x2_x3[i, 0])).argmin() for i in range(ti_x1_x2_x3.shape[0])]
closest_2 = [(np.abs(x2 - ti_x1_x2_x3[i, 1])).argmin() for i in range(ti_x1_x2_x3.shape[0])]
closest_3 = [(np.abs(x3 - ti_x1_x2_x3[i, 2])).argmin() for i in range(ti_x1_x2_x3.shape[0])]

# some transposing going on in some reshape
# swapping closest_1/2 works well
rho_opt[closest_2, closest_1, closest_3] = ti_rho_opt

####################################################################

X1, X2, X3 = np.meshgrid(x1,x2,x3,copy=False) # each is NxNxN

RHO_OPT = gd(
  (ti_x1_x2_x3[:, 0], ti_x1_x2_x3[:, 1], ti_x1_x2_x3[:, 2]),
  ti_rho_opt,
  (X1, X2, X3),
  method='nearest')

####################################################################

x1_marginal = np.array([
    np.trapz(
        np.array([
            np.trapz(RHO_OPT[j, i, :], x=x3) # x3 slices for one x2 => R
            for i in range(len(x2))]) # x3 slices across all x2 => Rn
        , x=x2) # x2 slice for one x1 => R
for j in range(len(x1))])

x2_marginal = np.array([
    np.trapz(
        np.array([
            np.trapz(RHO_OPT[i, j, :], x=x3) # x3 slices for one x1 => R
            for i in range(len(x1))]) # x3 slices across all x1 => Rn
        , x=x1) # x1 slice for one x2 => R
for j in range(len(x2))])

x3_marginal = np.array([
    np.trapz(
        np.array([
            np.trapz(RHO_OPT[i, :, j], x=x2) # x2 slices for one x1 => R
            for i in range(len(x1))]) # x2 slices across all x1 => Rn
        , x=x1) # x1 slice for one x3 => R
for j in range(len(x3))])

####################################################################

# normalize all the pdfs so area under curve ~= 1.0
x1_pdf_area = np.trapz(x1_marginal, x=x1)
x2_pdf_area = np.trapz(x2_marginal, x=x2)
x3_pdf_area = np.trapz(x3_marginal, x=x3)
print("prior to normalization: %.2f, %.2f, %.2f" % (
    x1_pdf_area,
    x2_pdf_area,
    x3_pdf_area))

x1_marginal /= x1_pdf_area
x2_marginal /= x2_pdf_area
x3_marginal /= x3_pdf_area

x1_pdf_area = np.trapz(x1_marginal, x=x1)
x2_pdf_area = np.trapz(x2_marginal, x=x2)
x3_pdf_area = np.trapz(x3_marginal, x=x3)
print("after to normalization: %.2f, %.2f, %.2f" % (
    x1_pdf_area,
    x2_pdf_area,
    x3_pdf_area))

#########################################################

https://www.google.com/search?q=tensorflow+v1+symbolic+tensor+to+numpy+array&oq=tensorflow+v1+symbolic+tensor+to+numpy+array&aqs=chrome..69i57.11997j0j7&sourceid=chrome&ie=UTF-8
https://stackoverflow.com/questions/58479556/notimplementederror-cannot-convert-a-symbolic-tensor-2nd-target0-to-a-numpy
https://github.com/tensorflow/models/issues/9706
https://www.google.com/search?q=tensorflow+v1+get+loss+function+session&sxsrf=ALiCzsbcKR1WCzKp0ESo8BpYAk1gzkgoHg%3A1662246352372&ei=0N0TY_m2Fti1qtsPjbqgoA4&ved=0ahUKEwj53vKa3vn5AhXYmmoFHQ0dCOQQ4dUDCA4&uact=5&oq=tensorflow+v1+get+loss+function+session&gs_lcp=Cgdnd3Mtd2l6EAMyBQgAEKIEMgUIABCiBDIFCAAQogQyBQgAEKIEOgoIABBHENYEELADOgQIIxAnOgUIABCRAjoLCAAQgAQQsQMQgwE6EQguEIAEELEDEIMBEMcBENEDOggILhCxAxCDAToECAAQQzoHCAAQsQMQQzoICAAQgAQQsQM6BQgAEIAEOgYIABAeEBY6CAgAEB4QFhAKOgUIABCGAzoFCCEQoAE6CAghEB4QFhAdOgUIIRCrAjoHCCEQoAEQCjoHCAAQHhCiBEoECEEYAEoECEYYAFCfB1i4qwVgyqwFaANwAXgAgAHXAYgBmzSSAQYwLjM1LjOYAQCgAQHIAQjAAQE&sclient=gws-wiz
https://www.tensorflow.org/api_docs/python/tf/compat/v1/losses/compute_weighted_loss
file:///media/cyan3/30E1-D3BC/data/tiffany_tyler/BSc_Thesis_E_Wasei.pdf
https://www.arxiv-vanity.com/papers/1907.04502/
https://epubs.siam.org/doi/pdf/10.1137/19M1274067
https://stackoverflow.com/questions/64004445/how-to-convert-tensor-into-numpy-array
https://stackoverflow.com/questions/38647353/tensorflow-convert-tensor-to-numpy-array-without-eval-or-sess-run
https://pythonguides.com/tensorflow-tensor-to-numpy/
https://stackoverflow.com/questions/63869134/converting-tensorflow-tensor-into-numpy-array
https://blog.finxter.com/how-to-convert-a-tensor-to-a-numpy-array-in-tensorflow/
https://stackoverflow.com/questions/41607155/you-must-feed-a-value-for-placeholder-tensor-placeholder-with-dtype-float
https://www.google.com/search?q=deepxde+session&sxsrf=ALiCzsYSJxq7om1UPDowRRdvytsJYdwgIQ%3A1662245414633&ei=JtoTY-SYJrXFqtsPq4q46Ao&ved=0ahUKEwjkw9_b2vn5AhW1omoFHSsFDq0Q4dUDCA4&uact=5&oq=deepxde+session&gs_lcp=Cgdnd3Mtd2l6EAM6CggAEEcQ1gQQsAM6BAgjECc6BQgAEJECOhEILhCABBCxAxCDARDHARDRAzoLCAAQgAQQsQMQgwE6CwguELEDEIMBENQCOgQIABBDOg4ILhCABBCxAxDHARDRAzoHCC4Q1AIQQzoFCAAQgAQ6CwguEIAEEMcBEK8BOgcIABCABBAKOgYIABAeEBZKBAhBGABKBAhGGABQ5wVYuBtguhxoBHABeACAAcgBiAHsDZIBBTguNy4xmAEAoAEByAEIwAEB&sclient=gws-wiz
https://www.tensorflow.org/api_docs/python/tf/compat/v1/keras/backend/get_session
https://deepxde.readthedocs.io/en/latest/search.html?q=session&check_keywords=yes&area=default
https://www.tensorflow.org/api_docs/python/tf/compat/v1/InteractiveSession
https://danijar.com/what-is-a-tensorflow-session/
https://www.tensorflow.org/api_docs/python/tf/compat/v1/get_default_session

#########################################################

https://colab.research.google.com/github/tensorflow/docs/blob/master/site/en/tutorials/quickstart/beginner.ipynb
https://colab.research.google.com/drive/1Y3n-Et56ZXedGlWahJ4VTQHpFqMy2I2m#scrollTo=ArT4LfbxT7AC
https://stackoverflow.com/questions/63869134/converting-tensorflow-tensor-into-numpy-array
https://stackoverflow.com/questions/70767238/unable-to-convert-tensorflow-python-framework-ops-tensor-object-to-numpy-array-f
https://www.tensorflow.org/api_docs/python/tf/py_function
https://www.tensorflow.org/versions/r1.15/api_docs/python/tf/py_function
https://www.google.com/search?q=scipy+linprog&oq=scipy+linprog&aqs=chrome..69i57.1693j0j7&sourceid=chrome&ie=UTF-8
https://stackoverflow.com/questions/49127834/removing-conda-environment
https://www.google.com/search?q=conda+list+environments&oq=conda+list+environments&aqs=chrome..69i57.2198j0j7&sourceid=chrome&ie=UTF-8
https://numpy.org/doc/stable/reference/generated/numpy.savetxt.html
https://numpy.org/doc/stable/reference/generated/numpy.genfromtxt.html
http://localhost:8888/notebooks/wass.ipynb
https://www.google.com/search?sxsrf=ALiCzsYR8IPv-XpexqqsdI3AYr2oxz08SQ:1662341520009&q=tensorflow.python.client.pywrap+tf_session+import+*+initialization+failed&spell=1&sa=X&ved=2ahUKEwj-ma7ewPz5AhWGlGoFHffTDZ8QBSgAegQIARA2&biw=960&bih=876&dpr=1
https://www.google.com/search?q=sparse.eye&oq=sparse.eye&aqs=chrome..69i57.1993j0j7&sourceid=chrome&ie=UTF-8
https://stackoverflow.com/questions/61903139/tf-py-function-not-able-to-return-a-list
https://numpy.org/doc/stable/reference/generated/numpy.loadtxt.html

#########################################################


def WASS3(y_true, y_pred):
    # xpdf=y_true.np()
    # ypdf= y_pred.np()
    # sess = tf.compat.v1.InteractiveSession()
    # xpdf = tf.make_ndarray(y_pred)
    # ypdf= tf.make_ndarray(y_true)

    # ipdb.set_trace();

    # xpdf = tf.make_ndarray(y_pred.op.get_attr('value'))
    # ypdf = tf.make_ndarray(y_true.op.get_attr('value'))

    # xpdf = y_pred.numpy()
    # ypdf = y_true.numpy()

    print("####")
    print(y_pred)
    print(type(y_pred))
    print(y_true)
    print(type(y_true))

    # print("####")
    # print(np.sum(xpdf))
    # print(np.sum(ypdf))

    # ipdb.set_trace();

    # nSample=1000
    # x_grid = np.transpose(np.linspace(0., 6., nSample))
    # y_grid = np.transpose(np.linspace(0., 6., nSample))

    # [X,Y] = np.meshgrid(x_grid,x_grid)
    # C = (X - Y)**2

    # cvector = C.flatten('F')

    # A = np.concatenate((np.kron(np.ones((1,nSample)), sparse.eye(nSample).toarray()), np.kron(sparse.eye(nSample).toarray(),np.ones((1,nSample)))), axis=0)

    # bvector = np.concatenate((xpdf,ypdf), axis=0)

    # res=linprog(cvector, A_eq=A, b_eq=bvector, options={"disp": True})

    # return res.fun

    # return tf.constant(1.0, dtype=config.real(tf))

    v = tf.Variable(1.)
    v = tf.constant(1.)

    # print("v: ", v.shape)

    # loss = tf.py_function(
    #     func=WASS,
    #     inp=[y_true, y_pred],
    #     Tout=tf.float32
    # )
    res = 1.0 + 0 * tf.math.reduce_min(y_true - y_pred)
    return res

    # res = tf.math.real(y_true)
    # print(res.shape)

    # print("####")
    # print("v", v)
    # print("type(res)", type(res))
    # print("res", res)
    # print("res.numpy()", res.numpy())

    # res = tf.constant(1.0)
    # dataset = tf.data.Dataset.from_tensor_slices(tensor1)

    # ipdb.set_trace();

    # return 3.0

    # return v
    # return v.ref().deref()
    # return v.read_value()
    # return res
    # return dataset[0]
    # return bkd.reduce_mean(bkd.square(y_true - y_pred))



    loss = tf.numpy_function(
        func=WASS,
        inp=[y_true, y_pred],
        Tout=tf.float32
    )
    # ipdb.set_trace();
    # loss.set_shape(y_true.get_shape())

(tf) cyan3@vipersim01:~/gradschool/231/research$ ./wass.py 
Using backend: tensorflow.compat.v1

WARNING:tensorflow:From /usr/local/home/cyan3/miniforge/envs/tf/lib/python3.9/site-packages/tensorflow/python/compat/v2_compat.py:107: disable_resource_variables (from tensorflow.python.ops.variable_scope) is deprecated and will be removed in a future version.
Instructions for updating:
non-resource variables are not supported in the long term
Enable just-in-time compilation with XLA.

WARNING:tensorflow:From /usr/local/home/cyan3/miniforge/envs/tf/lib/python3.9/site-packages/deepxde/nn/initializers.py:118: The name tf.keras.initializers.he_normal is deprecated. Please use tf.compat.v1.keras.initializers.he_normal instead.

PhysicalDevice(name='/physical_device:GPU:0', device_type='GPU')
Compiling model...
Building feed-forward neural network...
/usr/local/home/cyan3/miniforge/envs/tf/lib/python3.9/site-packages/deepxde/nn/tensorflow_compat_v1/fnn.py:103: UserWarning: `tf.layers.dense` is deprecated and will be removed in a future version. Please use `tf.keras.layers.Dense` instead.
  return tf.layers.dense(
'build' took 0.031497 s

2022-09-05 15:24:27.698345: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2022-09-05 15:24:28.099728: W tensorflow/core/common_runtime/gpu/gpu_bfc_allocator.cc:42] Overriding orig_value setting because the TF_FORCE_GPU_ALLOW_GROWTH environment variable is set. Original config value was 0.
2022-09-05 15:24:28.099770: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1532] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 6673 MB memory:  -> device: 0, name: Quadro RTX 4000, pci bus id: 0000:91:00.0, compute capability: 7.5
Tensor("Sum:0", shape=(), dtype=float32)
Tensor("Sum_1:0", shape=(), dtype=float32)
Tensor("Sum_2:0", shape=(), dtype=float32)
Tensor("Sum_3:0", shape=(), dtype=float32)
Tensor("Sum_4:0", shape=(), dtype=float32)
Tensor("Sum_5:0", shape=(), dtype=float32)
'compile' took 2.642019 s

Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.
Initializing variables...
2022-09-05 15:24:30.348215: I tensorflow/compiler/mlir/mlir_graph_optimization_pass.cc:354] MLIR V1 optimization pass is not enabled
Training model...

2022-09-05 15:24:30.626271: I tensorflow/compiler/xla/service/service.cc:170] XLA service 0x7f434c008d80 initialized for platform CUDA (this does not guarantee that XLA will be used). Devices:
2022-09-05 15:24:30.626345: I tensorflow/compiler/xla/service/service.cc:178]   StreamExecutor device (0): Quadro RTX 4000, Compute Capability 7.5
2022-09-05 15:24:30.637792: I tensorflow/compiler/mlir/tensorflow/utils/dump_mlir_util.cc:263] disabling MLIR crash reproducer, set env var `MLIR_CRASH_REPRODUCER_DIRECTORY` to enable.
2022-09-05 15:24:31.440390: I tensorflow/compiler/jit/xla_compilation_cache.cc:478] Compiled cluster using XLA!  This line is logged at most once for the lifetime of the process.
2022-09-05 15:24:31.446530: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1532] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 6673 MB memory:  -> device: 0, name: Quadro RTX 4000, pci bus id: 0000:91:00.0, compute capability: 7.5
start linprog
start linprog
Running HiGHS 1.2.2 [date: 2022-08-30, git hash: n/a]
Copyright (c) 2022 ERGO-Code under MIT licence terms
Presolving model
Problem status detected on presolve: Infeasible
Model   status      : Infeasible
Objective value     :  0.0000000000e+00
HiGHS run time      :          0.15
WARNING: Method getModelStatus(const bool scaled_model) is deprecated: alternative method is getModelStatus()
end
None
Running HiGHS 1.2.2 [date: 2022-08-30, git hash: n/a]
Copyright (c) 2022 ERGO-Code under MIT licence terms
Presolving model
Problem status detected on presolve: Infeasible
Model   status      : Infeasible
Objective value     :  0.0000000000e+00
HiGHS run time      :          0.30
WARNING: Method getModelStatus(const bool scaled_model) is deprecated: alternative method is getModelStatus()
end
None
start linprog
start linprog
Running HiGHS 1.2.2 [date: 2022-08-30, git hash: n/a]
Copyright (c) 2022 ERGO-Code under MIT licence terms
Presolving model
Problem status detected on presolve: Infeasible
Model   status      : Infeasible
Objective value     :  0.0000000000e+00
HiGHS run time      :          0.09
WARNING: Method getModelStatus(const bool scaled_model) is deprecated: alternative method is getModelStatus()
end
None
Running HiGHS 1.2.2 [date: 2022-08-30, git hash: n/a]
Copyright (c) 2022 ERGO-Code under MIT licence terms
Presolving model
Problem status detected on presolve: Infeasible
Model   status      : Infeasible
Objective value     :  0.0000000000e+00
HiGHS run time      :          0.30
WARNING: Method getModelStatus(const bool scaled_model) is deprecated: alternative method is getModelStatus()
end
None
Step      Train loss                                            Test loss                                             Test metric
0         [2.92e-02, 4.04e-04, 1.87e-01, 1.00e+00, 1.00e+00]    [2.92e-02, 4.04e-04, 1.87e-01, 1.00e+00, 1.00e+00]    []  
start linprog
start linprog
Running HiGHS 1.2.2 [date: 2022-08-30, git hash: n/a]
Copyright (c) 2022 ERGO-Code under MIT licence terms
Presolving model
Problem status detected on presolve: Infeasible
Model   status      : Infeasible
Objective value     :  0.0000000000e+00
HiGHS run time      :          0.25
WARNING: Method getModelStatus(const bool scaled_model) is deprecated: alternative method is getModelStatus()
end
None
Running HiGHS 1.2.2 [date: 2022-08-30, git hash: n/a]
Copyright (c) 2022 ERGO-Code under MIT licence terms
Presolving model
Problem status detected on presolve: Infeasible
Model   status      : Infeasible
Objective value     :  0.0000000000e+00
HiGHS run time      :          0.15
WARNING: Method getModelStatus(const bool scaled_model) is deprecated: alternative method is getModelStatus()
end
None
2022-09-05 15:25:37.725396: W tensorflow/core/framework/op_kernel.cc:1745] OP_REQUIRES failed at xla_ops.cc:462 : INVALID_ARGUMENT: Input to reshape is a tensor with 1 values, but the requested shape has 1000

         [[{{node gradients_16/sub_21_grad/Reshape}}]]

#########################################################

https://stackoverflow.com/questions/70767238/unable-to-convert-tensorflow-python-framework-ops-tensor-object-to-numpy-array-f/70770060#70770060
https://deepxde.readthedocs.io/en/latest/modules/deepxde.icbc.html
https://deepxde.readthedocs.io/en/latest/modules/deepxde.html?highlight=compile#deepxde.model.Model.compile
https://www.tensorflow.org/api_docs/python/tf/py_function
https://stackoverflow.com/questions/35550451/tensorflow-py-func-or-custom-function
https://www.anycodings.com/1questions/3781488/using-tfpyfunc-as-loss-function-to-implement-gradient-descent
https://www.google.com/search?q=Shapes+of+all+inputs+must+match:+values%5B0%5D.shape+%3D+%5B%5D+!%3D+values%5B3%5D.shape+%3D+%5B1%5D+site:stackoverflow.com&sxsrf=ALiCzsa1Li5KOOhgmFxAp4Z3Nk_HFBzxWA:1662399748251&sa=X&ved=2ahUKEwi9h-DTmf75AhUClmoFHVF_AtcQrQIoBHoECAQQBQ&biw=960&bih=939&dpr=1
https://stackoverflow.com/questions/61553510/tensorflow-2-lstm-invalidargumenterror-shapes-of-all-inputs-must-match
https://stackoverflow.com/questions/69193435/fixing-error-invalidargumenterror-shapes-of-all-inputs-must-match-values0
https://www.google.com/search?q=tensorflow+v1+reduce_mean&oq=tensorflow+v1+reduce_mean&aqs=chrome..69i57.3459j0j7&sourceid=chrome&ie=UTF-8
https://www.google.com/search?q=tf+shape+%5B%5D&sxsrf=ALiCzsYAXxZLNy-fjv5Un9z60O1zLBK7qA%3A1662399973702&ei=5TUWY4i-KteuqtsPkYKl0Ak&ved=0ahUKEwjIxKC_mv75AhVXl2oFHRFBCZoQ4dUDCA8&uact=5&oq=tf+shape+%5B%5D&gs_lcp=Cgdnd3Mtd2l6EAMyBQgAEIAEMgUIABCABDIGCAAQHhAWMgYIABAeEBYyBggAEB4QFjIGCAAQHhAWMgYIABAeEBYyBggAEB4QFjIGCAAQHhAWMgYIABAeEBY6CAgAEIAEELADOggIABCwAxCRAjoHCAAQHhCwAzoECCMQJzoICC4QgAQQsQM6CwgAEIAEELEDEIMBOggIABCABBCxAzoECAAQQzoKCAAQsQMQgwEQQzoKCAAQgAQQhwIQFDoFCAAQkQJKBAhBGAFKBAhGGABQighY_hZgvRpoAnAAeAGAAe8BiAGfD5IBBjAuMTAuMZgBAKABAcgBCsABAQ&sclient=gws-wiz
https://www.google.com/search?q=py_function+loss+function&sxsrf=ALiCzsY3Svl2RHHvb_BSTKVDfo_YKLb1rQ%3A1662400367213&ei=bzcWY-u7DNa6qtsPsJ63mA4&ved=0ahUKEwirr_L6m_75AhVWnWoFHTDPDeMQ4dUDCA8&uact=5&oq=py_function+loss+function&gs_lcp=Cgdnd3Mtd2l6EAMyBQghEKABMgUIIRCrAjIFCCEQqwI6CggAEEcQ1gQQsAM6BQgAEJECOgUIABCABDoECAAQHjoGCAAQHhAWOgkIABAeEMkDEBY6CAgAEB4QDxAWOggIABAeEBYQCjoFCAAQhgM6CAghEB4QFhAdSgQIQRgASgQIRhgAUP8DWLUQYP0QaAFwAHgAgAHSAYgBkw2SAQYwLjExLjGYAQCgAQHIAQjAAQE&sclient=gws-wiz
https://scikit-learn.org/stable/modules/generated/sklearn.metrics.cohen_kappa_score.html
https://www.google.com/search?q=tf+%22py_func%22+loss+output&sxsrf=ALiCzsYC70ZkIXseIpdiLRrN7nDlsEW8Hg%3A1662400865893&ei=YTkWY9aFNvC4qtsPnZKl0Ak&ved=0ahUKEwiWutfonf75AhVwnGoFHR1JCZoQ4dUDCA8&uact=5&oq=tf+%22py_func%22+loss+output&gs_lcp=Cgdnd3Mtd2l6EAMyBQghEKABMggIIRAeEBYQHToHCCMQsAMQJzoKCAAQRxDWBBCwAzoGCAAQHhAWOgUIABCGAzoFCCEQqwJKBAhBGABKBAhGGABQqUpYm1Vgo1ZoAnAAeACAAfcBiAHIDZIBBjAuMTAuMZgBAKABAcgBCcABAQ&sclient=gws-wiz
https://stackoverflow.com/questions/46273364/tensorflow-valueerror-shapes-must-be-equal-rank-but-are-0-and-2
https://stackoverflow.com/questions/50187667/using-python-code-with-tf-py-func-in-custom-keras-layer
https://www.tensorflow.org/api_docs/python/tf/compat/v1/py_func
https://stackoverflow.com/questions/45061344/gradient-update-with-a-custom-loss-function
https://stackoverflow.com/questions/68275702/pass-inputs-to-loss-function-in-eager-mode
https://stackoverflow.com/questions/66287603/how-can-i-implement-this-custom-loss-function-in-keras
https://keras.io/api/layers/core_layers/#lambda
https://stackoverflow.com/questions/69352679/attributeerror-tensor-object-has-no-attribute-numpy-while-using-tf-disable
https://stackoverflow.com/questions/50109996/whats-the-difference-between-tf-constant-and-tf-convert-to-tensor
https://www.tensorflow.org/api_docs/python/tf/math/reduce_mean
https://www.google.com/search?q=tf+create+tensor+from+number&oq=tf+create+tensor+from+number&aqs=chrome..69i57.3366j0j7&sourceid=chrome&ie=UTF-8
https://www.guru99.com/tensor-tensorflow.html
https://www.tensorflow.org/api_docs/python/tf/Tensor
https://stackoverflow.com/questions/37071788/tensorflow-how-to-modify-the-value-in-tensor
https://www.google.com/search?q=tensorflow.python.framework.ops.EagerTensor&oq=tensorflow.python.framework.ops.EagerTensor&aqs=chrome..69i57.440j0j7&sourceid=chrome&ie=UTF-8
https://discuss.tensorflow.org/t/attributeerror-tensorflow-python-framework-ops-eagertensor-object-has-no-attribute-to-tensor/5044
https://stackoverflow.com/questions/49568041/tensorflow-how-do-i-convert-a-eagertensor-into-a-numpy-array
https://www.tensorflow.org/api_docs/python/tf/math/reduce_sum
https://stackoverflow.com/questions/64403061/how-to-convert-a-tensor-to-eager-tensor-in-tensorflow-2-1-0
https://www.tensorflow.org/api_docs/python/tf/math/reduce_min
https://www.tensorflow.org/api_docs/python/tf/py_function
https://www.tensorflow.org/api_docs/python/tf/numpy_function
https://stackoverflow.com/questions/9757642/wrapping-specialised-c-template-class-with-swig
https://stackoverflow.com/questions/45735858/why-tensorflow-just-outputs-killed
https://stackoverflow.com/questions/50740771/how-can-i-use-c-struct-pointers-in-python-using-swig

#########################################################

from scipy.stats import truncnorm
N = nSample = 1000
def pdf1d_0(x):
    sigma = 1
    mu=2
    a, b = (0. - mu) / sigma, (6. - mu) / sigma
    rho_0=truncnorm.pdf(x, a, b, loc = mu, scale = sigma)
    return rho_0
x_T = np.transpose(np.linspace(0., 6., N))
rho_0=pdf1d_0(x_T).reshape(len(x_T),1)

x_grid = np.transpose(np.linspace(0., 6., nSample))
y_grid = np.transpose(np.linspace(0., 6., nSample))
[X,Y] = np.meshgrid(x_grid,x_grid)
C = (X - Y)**2
cvector = C.flatten('F')

A = np.concatenate(
    (
        np.kron(
            np.ones((1,nSample)),
            sparse.eye(nSample).toarray()
        ),
        np.kron(
            sparse.eye(nSample).toarray(),
            np.ones((1,nSample))
        )
    ), axis=0)
# 2*nSample

def WASS(y_true, y_pred):
    xpdf = y_pred.numpy()
    # ypdf = y_true.numpy()

    xpdf = np.where(xpdf < 0, 0, xpdf)

    ipdb.set_trace()

    bvector = np.concatenate((xpdf, rho_0), axis=0)
    bvector = bvector.reshape(-1)

    print("start linprog")
    # min cvector * x s.t. A * x = b. 

    # res=linprog(
    #     cvector,
    #     A_eq=A,
    #     b_eq=bvector,
    #     options={"disp": True})
    # print(res.fun)

    # Define and solve the CVXPY problem.
    x = cp.Variable(A.shape[1])
    prob = cp.Problem(
        cp.Minimize(cvector.T @ x),
        [A @ x == bvector])
    prob.solve()
    res = prob.value

    print("end")

    # must use a 'reduce'
    res = 1.0 + 0 * tf.math.reduce_min(y_true)
    return res

def WASS2(y_true, y_pred):
    loss = tf.py_function(
        func=WASS,
        inp=[y_true, y_pred],
        Tout=tf.float32
    )
    return loss

#########################################################
#########################################################
#########################################################
#########################################################

Tried with custom z function z2 + z
z is all about getting the trapz to be 1
30k iterations
does not really converge, minimum is 3
t=0 pred2 is a gaussian but trapz is 45

#########################################################

scratch0

try again using loss function written only with tf

cand = tf.abs(1.0 - tf.reduce_sum(y_pred))
loss function converges, but sum of 12

#########################################################

scratch1

cand = tf.abs(0.5 - tf.reduce_sum(y_pred))
loss function converges, but sum of 9

does not converge super well

#########################################################

scratch2

cand = tf.abs(0 - tf.reduce_sum(y_pred))
loss function converges, but sum of 6

converges well

#########################################################

goal actual
0    6
0.5  9
1    12

actual=state_max + state_max*goal

so to get it to actual=0

0=6+6*goal
-6 = 6*goal
-1 = goal

#########################################################

scratch3

cand = tf.abs(-1 - tf.reduce_sum(y_pred))
loss function converges, but sum of 0 (as hypothesized)
except it cheats because there are negative terms
so we need to add penalty for that

converges well

#########################################################

scratch 5

if we want actual=1

1 = 6+6*goal
-5 / 6 = goal

adding a penalty for negative terms with a gain of 50

output is as desired!

#########################################################

trying this for another rho_0 at another mu_0

#########################################################

http://localhost:8888/notebooks/wass_1d-scratch7.ipynb
http://localhost:8888/notebooks/wass_1d-scratch6.ipynb
https://numpy.org/doc/stable/reference/generated/numpy.trapz.html
https://stackoverflow.com/questions/47675074/correctly-calculate-the-area-beneath-curve-using-trapz-and-simpson-in-python
https://www.tensorflow.org/api_docs/python/tf/keras/losses/MeanAbsoluteError
https://github.com/keras-team/keras/blob/b80dd12da9c0bc3f569eca3455e77762cf2ee8ef/keras/utils/losses_utils.py#L276
https://www.tensorflow.org/api_docs/python/tf/keras/losses/CategoricalCrossentropy
https://github.com/keras-team/keras/blob/v2.10.0/keras/losses.py#L112-L160
https://www.tensorflow.org/api_docs/python/tf/compat/v1/train/AdamOptimizer
https://www.google.com/search?q=cvx+in+tensorflow&oq=cvx+in+tensorflow&aqs=chrome..69i57.7249j0j7&sourceid=chrome&ie=UTF-8
https://github.com/cvxgrp/cvxpylayers/tree/master/examples/tf
https://github.com/cvxgrp/cvxpylayers/blob/master/examples/tf/convex_approximate_dynamic_programming.ipynb
https://github.com/cvxgrp/cvxpylayers/blob/master/examples/tf/optimizing_stiffness_constants.ipynb
https://github.com/lululxvi/deepxde/discussions/902
https://github.com/lululxvi/deepxde/discussions/categories/q-a?discussions_q=minimize+category%3AQ%26A
https://github.com/lululxvi/deepxde/discussions/837
https://deepxde.readthedocs.io/en/latest/_modules/deepxde/model.html?highlight=loss%20function
https://sharepoint.msfc.nasa.gov/sites/programs/VIPER/IAU%20PDU/Forms/Active.aspx?RootFolder=%2Fsites%2Fprograms%2FVIPER%2FIAU%20PDU%2F02%20Documentation%2FPAPI%20Docs&FolderCTID=0x01200052EADA4F0363964E9C9062B1FA69C4ED&View=%7B24AE143B%2DCEA5%2D45F9%2DA2E8%2D65BF6BA05B36%7D
https://trunk.arc.nasa.gov/bitbucket/projects/VIPERGDS/repos/viper_devsim/permissions
https://trunk.arc.nasa.gov/confluence/pages/viewpage.action?spaceKey=VIPERSW&title=RTS+Table
https://deepxde.readthedocs.io/en/latest/modules/deepxde.html
https://www.tensorflow.org/api_docs/python/tf/math/reduce_min
https://www.databricks.com/tensorflow/linear-equations
https://www.cvxpy.org/examples/basic/linear_program.html
https://wikidocs.net/24605
https://trunk.arc.nasa.gov/confluence/display/VIPERMS/VERVE+Quick+Reference
https://www.google.com/search?q=tf+linear+program+solver&oq=tf+linear+program+solver&aqs=chrome.0.69i59.6148j0j7&sourceid=chrome&ie=UTF-8
https://www.tensorflow.org/api_docs/python/tf/linalg/solve
https://www.google.com/search?q=tf+autograd+minimize&sxsrf=ALiCzsYDnf2Veg7LztqmppBD_z9etdM5XQ:1662698822494&ei=RsUaY-flHcupqtsPvJm42AE&start=10&sa=N&ved=2ahUKEwjnoLvl84b6AhXLlGoFHbwMDhsQ8tMDegQIARA7&biw=2400&bih=1182&dpr=0.8
https://github.com/brunorigal/autograd-minimize
http://localhost:8888/notebooks/wass_1d-scratch0.ipynb
http://localhost:8888/notebooks/wass_1d-scratch0.ipynb
https://docs.carrington.edu/catalog/carrington-college.pdf
https://outlook.office365.com/mail/
https://calendar.google.com/calendar/u/0/r/week?pli=1
http://localhost:8888/notebooks/wass_1d-scratch0.ipynb

#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################

#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################
#########################################################