f python:
x[2]
x[3]
-F1*x[2]/J1 - K*x[1]/(J1*N) + K*x[0]/(J1*N**2)
-F2*x[3]/J2 - G*d*M*cos(x[1])/J2 - K*x[1]/J2 + K*x[0]/(J2*N)


alpha python:
F1*x[2] + F2**3*J1*N*x[3]/(J2**2*K) + F2**2*G*J1*N*d*M*cos(x[1])/(J2**2*K) + F2**2*J1*N*x[1]/J2**2 - F2**2*J1*x[0]/J2**2 + 2*F2*G*J1*N*d*M*x[3]*sin(x[1])/(J2*K) - 2*F2*J1*N*x[3]/J2 + F2*J1*x[2]/J2 + G**2*J1*N*d**2*M**2*sin(x[1])*cos(x[1])/(J2*K) - G*J1*N*d*M*x[3]**2*cos(x[1])/K + G*J1*N*d*M*x[1]*sin(x[1])/J2 - G*J1*N*d*M*cos(x[1])/J2 - G*J1*d*M*x[0]*sin(x[1])/J2 - J1*K*N*x[1]/J2 + J1*K*x[0]/J2 + K*x[1]/N - K*x[0]/N**2


beta python:
J1*J2*N/K


tau python:
x[1]
x[3]
-F2*x[3]/J2 - G*d*M*cos(x[1])/J2 - K*x[1]/J2 + K*x[0]/(J2*N)
-F2*(-F2*x[3]/J2 - G*d*M*cos(x[1])/J2 - K*x[1]/J2 + K*x[0]/(J2*N))/J2 + (G*d*M*sin(x[1])/J2 - K/J2)*x[3] + K*x[2]/(J2*N)


tau_inv python:
N*(F2*z[1] + G*d*M*cos(z[0]) + J2*z[2] + K*z[0])/K
z[0]
N*(F2*z[2] - G*d*M*z[1]*sin(z[0]) + J2*z[3] + K*z[1])/K
z[1]


